/*----------------------------------*
 | An example servo definition file |
 *----------------------------------*/

// Options can be specified
option gotype.package = "example";
option goecho.package = "example";

// A request to echo a message
message EchoRequest {
  message: string;
}

// A response with an echoed message
message EchoResponse {
  message: string;
  signature: [byte];
}

// A service that can echo and publish messages
service EchoService {
  rpc echo(EchoRequest): EchoResponse;
}

// A status message to publish
message Metric {
  type: MetricType;
  name: string;
  labels: [string:string];
  value: float64;
  at: timestamp;
}

alias URN -> string;
alias Bit -> bool;

message Binary {
  location: URN;
  bits: [Bit];
}

// The status of the message
enum MetricType {
  COUNTER;
  GAUGE;
}

message Log {
  labels: [string:string];
  value: string;
}

// A service to publish metrics
service TelemetryService {
  rpc publish(Telemetry);
}

union Telemetry {
  log: Log;
  metric: Metric;
}
