// generated by Textmapper; DO NOT EDIT

package parsegen

import (
	"fmt"

	"github.com/egoodhall/servo/internal/parser/parsegen/token"
)

var tmNonterminals = [...]string{
	"Comment",
	"WhiteSpace",
	"WhiteSpace$1",
	"OptionName",
	"OptionValue",
	"Option",
	"TypeRef",
	"FieldName",
	"ScalarType",
	"MapKeyType",
	"MapValueType",
	"MapType",
	"ListElementType",
	"ListType",
	"FieldMod",
	"FieldType",
	"FieldDef",
	"FieldDefList",
	"MessageName",
	"FieldDefList_optlist",
	"MessageDef",
	"RpcName",
	"RpcRequest",
	"RpcResponse",
	"RpcMethod",
	"PubName",
	"PubMessage",
	"PubMethod",
	"Method",
	"MethodList",
	"ServiceName",
	"MethodList_list",
	"ServiceDef",
	"EnumName",
	"EnumValue",
	"EnumField",
	"EnumValueList",
	"EnumDef",
	"EnumValueList_list",
	"Definition",
	"DefinitionList",
	"DefinitionList_optlist",
	"ServoFile",
}

func symbolName(sym int32) string {
	if sym == noToken {
		return "<no-token>"
	}
	if sym < int32(token.NumTokens) {
		return token.Type(sym).String()
	}
	if i := int(sym) - int(token.NumTokens); i < len(tmNonterminals) {
		return tmNonterminals[i]
	}
	return fmt.Sprintf("nonterminal(%d)", sym)
}

var tmAction = []int32{
	-3, 6, 1, 0, 5, 164, -23, -69, -83, 4, 3, -1, -1, -1, -1, -1, 158, 155, 156,
	157, -97, 163, 143, -1, 38, -1, 136, -1, 7, -1, 159, 160, 162, -1, -1, -117,
	-1, -1, -1, -1, 144, -1, -1, -131, 154, -1, -1, 40, -1, -143, -1, -1, -1, -1,
	131, 130, -157, 138, -1, -1, 8, -1, -1, 146, -1, 148, 152, 153, -1, -1, -1,
	-1, 12, 44, -1, -173, 39, 40, -1, 132, 133, 45, -1, 112, -1, -1, 135, 142,
	137, -1, -1, 9, 151, 145, -1, 150, 43, 34, 35, -1, -1, 37, -1, 42, -1, -1,
	-1, -1, 141, -1, 140, 149, 10, 11, -1, -1, -1, 13, -187, -199, -211, -1, -1,
	41, -1, 46, -1, -1, -1, 113, -1, -1, 139, -1, -1, -1, 19, 20, 22, 24, 33, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 14, -1, 17, -1, 31, -1, 32,
	-1, 29, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 129, -1, -1, -1, -1, -1,
	-1, 18, 30, 27, -1, 28, -1, -1, -1, -1, 47, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, 125, -1, -1, 128, 127, -1, -1, -1, 121, -1, -1, 15, -1, 26, -1, -1, -1,
	-1, -1, -1, 111, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 124,
	123, -1, 126, 117, -1, -1, 120, 119, -1, 16, -1, 95, -1, -1, -1, -1, -1, -1,
	109, -1, 110, -1, 107, -1, -1, 103, -1, -1, -1, -1, -1, -1, -1, -1, -1, 79,
	-1, -1, -1, -1, -1, -1, 122, 116, 115, -1, 118, 93, -1, 94, -1, 91, -1, -1,
	87, -1, -1, -1, 108, 105, -1, 106, 101, -1, 102, -1, 99, -1, -1, 63, -1, -1,
	-1, -1, -1, -1, 77, -1, 78, -1, 75, -1, -1, 71, -1, -1, -1, 114, 92, 89, -1,
	90, 85, -1, 86, -1, 83, -1, 104, 100, 97, -1, 98, 61, -1, 62, -1, 59, -1, -1,
	55, -1, -1, -1, 76, 73, -1, 74, 69, -1, 70, -1, 67, -1, 88, 84, 81, -1, 82,
	96, 60, 57, -1, 58, 53, -1, 54, -1, 51, -1, 72, 68, 65, -1, 66, 80, 56, 52,
	49, -1, 50, 64, 48, -1, -2,
}

var tmLalr = []int32{
	6, -1, 7, -1, 8, -1, 0, 164, 2, 164, 3, 164, 4, 164, 5, 164, 9, 164, -1, -2,
	6, -1, 7, -1, 8, -1, 0, 2, 2, 2, 3, 2, 4, 2, 5, 2, 9, 2, 10, 2, 11, 2, 13, 2,
	14, 2, 17, 2, 18, 2, 19, 2, 20, 2, 21, 2, 22, 2, 23, 2, 24, 2, 25, 2, -1, -2,
	2, -1, 3, -1, 4, -1, 5, -1, 9, -1, 0, 166, -1, -2, 2, -1, 3, -1, 4, -1, 5,
	-1, 9, -1, 0, 165, -1, -2, 6, -1, 7, -1, 8, -1, 0, 161, 2, 161, 3, 161, 4,
	161, 5, 161, 9, 161, -1, -2, 6, -1, 7, -1, 8, -1, 9, 40, 10, 40, 25, 40, -1,
	-2, 6, -1, 7, -1, 8, -1, 22, 147, 25, 147, -1, -2, 6, -1, 7, -1, 8, -1, 9,
	40, 10, 40, 25, 40, -1, -2, 6, -1, 7, -1, 8, -1, 9, 134, 18, 134, 19, 134,
	25, 134, -1, -2, 6, -1, 7, -1, 8, -1, 9, 36, 10, 36, 25, 36, -1, -2, 12, -1,
	6, 21, 7, 21, 8, 21, 23, 21, -1, -2, 12, -1, 6, 23, 7, 23, 8, 23, 23, 23, -1,
	-2, 12, -1, 6, 25, 7, 25, 8, 25, 23, 25, -1, -2,
}

var tmGoto = []int32{
	0, 2, 2, 6, 10, 14, 18, 220, 422, 624, 652, 764, 858, 864, 872, 880, 884,
	888, 926, 942, 958, 966, 998, 1014, 1202, 1214, 1244, 1246, 1248, 1450, 1650,
	1850, 1852, 1854, 1858, 1950, 1958, 1966, 1968, 1970, 1978, 1980, 1988, 1994,
	2002, 2010, 2018, 2020, 2028, 2032, 2034, 2042, 2106, 2122, 2124, 2132, 2148,
	2164, 2180, 2182, 2190, 2194, 2196, 2212, 2228, 2244, 2248, 2256, 2260, 2264,
	2268, 2270,
}

var tmFromTo = []int16{
	389, 390, 7, 11, 8, 11, 7, 12, 8, 12, 7, 13, 8, 13, 7, 14, 8, 14, 0, 1, 6, 9,
	20, 1, 23, 1, 25, 1, 27, 1, 33, 1, 35, 1, 37, 1, 42, 1, 43, 1, 46, 1, 49, 1,
	56, 1, 59, 1, 74, 1, 75, 1, 82, 1, 84, 1, 99, 1, 104, 1, 106, 1, 121, 1, 122,
	1, 126, 1, 127, 1, 130, 1, 131, 1, 135, 1, 143, 1, 144, 1, 145, 1, 148, 1,
	149, 1, 150, 1, 153, 1, 161, 1, 164, 1, 166, 1, 168, 1, 169, 1, 170, 1, 172,
	1, 176, 1, 177, 1, 178, 1, 186, 1, 188, 1, 191, 1, 192, 1, 193, 1, 195, 1,
	197, 1, 199, 1, 202, 1, 206, 1, 210, 1, 215, 1, 216, 1, 217, 1, 219, 1, 223,
	1, 225, 1, 226, 1, 227, 1, 229, 1, 231, 1, 232, 1, 233, 1, 241, 1, 246, 1,
	250, 1, 252, 1, 253, 1, 257, 1, 260, 1, 264, 1, 266, 1, 267, 1, 268, 1, 270,
	1, 274, 1, 276, 1, 277, 1, 286, 1, 289, 1, 293, 1, 301, 1, 304, 1, 308, 1,
	310, 1, 311, 1, 315, 1, 318, 1, 322, 1, 331, 1, 342, 1, 345, 1, 349, 1, 357,
	1, 373, 1, 0, 2, 6, 2, 20, 2, 23, 2, 25, 2, 27, 2, 33, 2, 35, 2, 37, 2, 42,
	2, 43, 2, 46, 2, 49, 2, 56, 2, 59, 2, 74, 2, 75, 2, 82, 2, 84, 2, 99, 2, 104,
	2, 106, 2, 121, 2, 122, 2, 126, 2, 127, 2, 130, 2, 131, 2, 135, 2, 143, 2,
	144, 2, 145, 2, 148, 2, 149, 2, 150, 2, 153, 2, 161, 2, 164, 2, 166, 2, 168,
	2, 169, 2, 170, 2, 172, 2, 176, 2, 177, 2, 178, 2, 186, 2, 188, 2, 191, 2,
	192, 2, 193, 2, 195, 2, 197, 2, 199, 2, 202, 2, 206, 2, 210, 2, 215, 2, 216,
	2, 217, 2, 219, 2, 223, 2, 225, 2, 226, 2, 227, 2, 229, 2, 231, 2, 232, 2,
	233, 2, 241, 2, 246, 2, 250, 2, 252, 2, 253, 2, 257, 2, 260, 2, 264, 2, 266,
	2, 267, 2, 268, 2, 270, 2, 274, 2, 276, 2, 277, 2, 286, 2, 289, 2, 293, 2,
	301, 2, 304, 2, 308, 2, 310, 2, 311, 2, 315, 2, 318, 2, 322, 2, 331, 2, 342,
	2, 345, 2, 349, 2, 357, 2, 373, 2, 0, 3, 6, 3, 20, 3, 23, 3, 25, 3, 27, 3,
	33, 3, 35, 3, 37, 3, 42, 3, 43, 3, 46, 3, 49, 3, 56, 3, 59, 3, 74, 3, 75, 3,
	82, 3, 84, 3, 99, 3, 104, 3, 106, 3, 121, 3, 122, 3, 126, 3, 127, 3, 130, 3,
	131, 3, 135, 3, 143, 3, 144, 3, 145, 3, 148, 3, 149, 3, 150, 3, 153, 3, 161,
	3, 164, 3, 166, 3, 168, 3, 169, 3, 170, 3, 172, 3, 176, 3, 177, 3, 178, 3,
	186, 3, 188, 3, 191, 3, 192, 3, 193, 3, 195, 3, 197, 3, 199, 3, 202, 3, 206,
	3, 210, 3, 215, 3, 216, 3, 217, 3, 219, 3, 223, 3, 225, 3, 226, 3, 227, 3,
	229, 3, 231, 3, 232, 3, 233, 3, 241, 3, 246, 3, 250, 3, 252, 3, 253, 3, 257,
	3, 260, 3, 264, 3, 266, 3, 267, 3, 268, 3, 270, 3, 274, 3, 276, 3, 277, 3,
	286, 3, 289, 3, 293, 3, 301, 3, 304, 3, 308, 3, 310, 3, 311, 3, 315, 3, 318,
	3, 322, 3, 331, 3, 342, 3, 345, 3, 349, 3, 357, 3, 373, 3, 7, 15, 8, 15, 37,
	50, 48, 71, 53, 50, 58, 50, 59, 50, 70, 71, 78, 71, 85, 50, 89, 50, 90, 50,
	102, 71, 109, 50, 11, 22, 12, 24, 13, 26, 14, 28, 48, 72, 51, 81, 52, 83, 70,
	72, 78, 72, 99, 112, 102, 72, 104, 112, 106, 112, 116, 112, 122, 112, 124,
	112, 127, 112, 128, 112, 131, 112, 134, 112, 142, 112, 147, 112, 152, 112,
	166, 112, 180, 112, 186, 112, 189, 112, 192, 112, 193, 112, 197, 112, 214,
	112, 216, 112, 217, 112, 222, 112, 224, 112, 226, 112, 227, 112, 230, 112,
	232, 112, 233, 112, 249, 112, 251, 112, 253, 112, 263, 112, 265, 112, 267,
	112, 268, 112, 273, 112, 275, 112, 277, 112, 292, 112, 307, 112, 309, 112,
	311, 112, 321, 112, 348, 112, 99, 113, 104, 113, 106, 113, 116, 113, 122,
	113, 124, 113, 127, 113, 128, 113, 131, 113, 133, 154, 134, 113, 142, 113,
	147, 113, 152, 113, 166, 113, 180, 113, 186, 113, 189, 113, 192, 113, 193,
	113, 197, 113, 214, 113, 216, 113, 217, 113, 222, 113, 224, 113, 226, 113,
	227, 113, 230, 113, 232, 113, 233, 113, 249, 113, 251, 113, 253, 113, 263,
	113, 265, 113, 267, 113, 268, 113, 273, 113, 275, 113, 277, 113, 292, 113,
	307, 113, 309, 113, 311, 113, 321, 113, 348, 113, 118, 136, 119, 136, 120,
	136, 99, 114, 116, 114, 122, 114, 142, 114, 99, 115, 116, 115, 122, 115, 142,
	115, 114, 133, 115, 134, 157, 181, 212, 245, 74, 99, 100, 122, 145, 166, 155,
	180, 164, 186, 167, 192, 168, 193, 170, 197, 187, 216, 188, 217, 194, 226,
	195, 227, 198, 232, 199, 233, 218, 253, 228, 267, 229, 268, 234, 277, 269,
	311, 37, 51, 53, 51, 58, 51, 59, 51, 85, 51, 89, 51, 90, 51, 109, 51, 37, 52,
	53, 52, 58, 52, 59, 52, 85, 52, 89, 52, 90, 52, 109, 52, 82, 104, 84, 106,
	105, 127, 107, 131, 126, 145, 130, 150, 144, 164, 146, 168, 148, 170, 149,
	172, 151, 176, 153, 178, 165, 188, 169, 195, 171, 199, 173, 202, 177, 206,
	179, 210, 196, 229, 207, 241, 33, 40, 41, 40, 45, 40, 46, 40, 62, 40, 68, 40,
	69, 40, 94, 40, 15, 30, 42, 63, 50, 79, 61, 91, 64, 93, 71, 97, 121, 140,
	135, 158, 141, 160, 143, 162, 150, 174, 159, 182, 161, 183, 163, 185, 172,
	200, 175, 203, 176, 204, 178, 208, 184, 213, 191, 220, 201, 235, 202, 236,
	205, 238, 206, 239, 209, 242, 210, 243, 215, 247, 219, 254, 221, 256, 223,
	258, 225, 261, 231, 271, 237, 278, 240, 279, 241, 280, 244, 282, 246, 283,
	248, 285, 250, 287, 252, 290, 255, 294, 257, 295, 259, 297, 260, 298, 262,
	300, 264, 302, 266, 305, 270, 312, 272, 314, 274, 316, 276, 319, 281, 323,
	284, 324, 286, 325, 288, 327, 289, 328, 291, 330, 293, 332, 296, 334, 299,
	335, 301, 336, 303, 338, 304, 339, 306, 341, 308, 343, 310, 346, 313, 350,
	315, 351, 317, 353, 318, 354, 320, 356, 322, 358, 326, 360, 329, 361, 331,
	362, 333, 364, 337, 365, 340, 366, 342, 367, 344, 369, 345, 370, 347, 372,
	349, 374, 352, 376, 355, 377, 357, 378, 359, 380, 363, 381, 368, 382, 371,
	383, 373, 384, 375, 386, 379, 387, 385, 388, 23, 33, 25, 35, 27, 37, 34, 46,
	36, 49, 38, 59, 15, 31, 45, 66, 48, 73, 50, 80, 58, 87, 62, 92, 69, 95, 70,
	96, 71, 98, 78, 103, 85, 108, 90, 110, 94, 111, 102, 123, 109, 132, 29, 39,
	39, 60, 0, 4, 6, 10, 20, 4, 23, 4, 25, 4, 27, 4, 33, 4, 35, 4, 37, 4, 42, 4,
	43, 4, 46, 4, 49, 4, 56, 4, 59, 4, 74, 4, 75, 4, 82, 4, 84, 4, 99, 4, 104, 4,
	106, 4, 121, 4, 122, 4, 126, 4, 127, 4, 130, 4, 131, 4, 135, 4, 143, 4, 144,
	4, 145, 4, 148, 4, 149, 4, 150, 4, 153, 4, 161, 4, 164, 4, 166, 4, 168, 4,
	169, 4, 170, 4, 172, 4, 176, 4, 177, 4, 178, 4, 186, 4, 188, 4, 191, 4, 192,
	4, 193, 4, 195, 4, 197, 4, 199, 4, 202, 4, 206, 4, 210, 4, 215, 4, 216, 4,
	217, 4, 219, 4, 223, 4, 225, 4, 226, 4, 227, 4, 229, 4, 231, 4, 232, 4, 233,
	4, 241, 4, 246, 4, 250, 4, 252, 4, 253, 4, 257, 4, 260, 4, 264, 4, 266, 4,
	267, 4, 268, 4, 270, 4, 274, 4, 276, 4, 277, 4, 286, 4, 289, 4, 293, 4, 301,
	4, 304, 4, 308, 4, 310, 4, 311, 4, 315, 4, 318, 4, 322, 4, 331, 4, 342, 4,
	345, 4, 349, 4, 357, 4, 373, 4, 0, 5, 20, 32, 23, 34, 25, 36, 27, 38, 33, 41,
	35, 47, 37, 53, 42, 64, 43, 65, 46, 68, 49, 77, 56, 86, 59, 89, 74, 100, 75,
	101, 82, 105, 84, 107, 99, 116, 104, 124, 106, 128, 121, 141, 122, 142, 126,
	146, 127, 147, 130, 151, 131, 152, 135, 159, 143, 163, 144, 165, 145, 167,
	148, 171, 149, 173, 150, 175, 153, 179, 161, 184, 164, 187, 166, 189, 168,
	194, 169, 196, 170, 198, 172, 201, 176, 205, 177, 207, 178, 209, 186, 214,
	188, 218, 191, 221, 192, 222, 193, 224, 195, 228, 197, 230, 199, 234, 202,
	237, 206, 240, 210, 244, 215, 248, 216, 249, 217, 251, 219, 255, 223, 259,
	225, 262, 226, 263, 227, 265, 229, 269, 231, 272, 232, 273, 233, 275, 241,
	281, 246, 284, 250, 288, 252, 291, 253, 292, 257, 296, 260, 299, 264, 303,
	266, 306, 267, 307, 268, 309, 270, 313, 274, 317, 276, 320, 277, 321, 286,
	326, 289, 329, 293, 333, 301, 337, 304, 340, 308, 344, 310, 347, 311, 348,
	315, 352, 318, 355, 322, 359, 331, 363, 342, 368, 345, 371, 349, 375, 357,
	379, 373, 385, 0, 6, 20, 6, 23, 6, 25, 6, 27, 6, 33, 6, 35, 6, 37, 6, 42, 6,
	43, 6, 46, 6, 49, 6, 56, 6, 59, 6, 74, 6, 75, 6, 82, 6, 84, 6, 99, 6, 104, 6,
	106, 6, 121, 6, 122, 6, 126, 6, 127, 6, 130, 6, 131, 6, 135, 6, 143, 6, 144,
	6, 145, 6, 148, 6, 149, 6, 150, 6, 153, 6, 161, 6, 164, 6, 166, 6, 168, 6,
	169, 6, 170, 6, 172, 6, 176, 6, 177, 6, 178, 6, 186, 6, 188, 6, 191, 6, 192,
	6, 193, 6, 195, 6, 197, 6, 199, 6, 202, 6, 206, 6, 210, 6, 215, 6, 216, 6,
	217, 6, 219, 6, 223, 6, 225, 6, 226, 6, 227, 6, 229, 6, 231, 6, 232, 6, 233,
	6, 241, 6, 246, 6, 250, 6, 252, 6, 253, 6, 257, 6, 260, 6, 264, 6, 266, 6,
	267, 6, 268, 6, 270, 6, 274, 6, 276, 6, 277, 6, 286, 6, 289, 6, 293, 6, 301,
	6, 304, 6, 308, 6, 310, 6, 311, 6, 315, 6, 318, 6, 322, 6, 331, 6, 342, 6,
	345, 6, 349, 6, 357, 6, 373, 6, 14, 29, 39, 61, 7, 16, 8, 16, 99, 117, 104,
	125, 106, 129, 116, 117, 122, 117, 124, 125, 127, 125, 128, 129, 131, 129,
	134, 156, 142, 117, 147, 125, 152, 129, 166, 190, 180, 211, 186, 190, 189,
	190, 192, 190, 193, 190, 197, 190, 214, 190, 216, 190, 217, 190, 222, 190,
	224, 190, 226, 190, 227, 190, 230, 190, 232, 190, 233, 190, 249, 190, 251,
	190, 253, 190, 263, 190, 265, 190, 267, 190, 268, 190, 273, 190, 275, 190,
	277, 190, 292, 190, 307, 190, 309, 190, 311, 190, 321, 190, 348, 190, 48, 74,
	70, 74, 78, 74, 102, 74, 99, 118, 116, 118, 122, 118, 142, 118, 133, 155,
	180, 212, 99, 119, 116, 119, 122, 119, 142, 119, 134, 157, 99, 120, 116, 120,
	122, 120, 142, 120, 118, 137, 119, 138, 120, 139, 99, 121, 116, 135, 122,
	143, 142, 161, 48, 75, 70, 75, 78, 75, 102, 75, 48, 76, 70, 76, 78, 76, 102,
	76, 12, 25, 35, 48, 47, 70, 49, 78, 77, 102, 7, 17, 8, 17, 51, 82, 104, 126,
	124, 144, 127, 148, 147, 169, 166, 191, 186, 215, 189, 219, 192, 223, 193,
	225, 197, 231, 214, 246, 216, 250, 217, 252, 222, 257, 224, 260, 226, 264,
	227, 266, 230, 270, 232, 274, 233, 276, 249, 286, 251, 289, 253, 293, 263,
	301, 265, 304, 267, 308, 268, 310, 273, 315, 275, 318, 277, 322, 292, 331,
	307, 342, 309, 345, 311, 349, 321, 357, 348, 373, 37, 54, 53, 54, 58, 54, 59,
	54, 85, 54, 89, 54, 90, 54, 109, 54, 52, 84, 106, 130, 128, 149, 131, 153,
	152, 177, 37, 55, 53, 55, 58, 55, 59, 55, 85, 55, 89, 55, 90, 55, 109, 55,
	37, 56, 53, 56, 58, 56, 59, 56, 85, 56, 89, 56, 90, 56, 109, 56, 37, 57, 53,
	57, 58, 88, 59, 57, 85, 88, 89, 57, 90, 88, 109, 88, 13, 27, 37, 58, 53, 85,
	59, 90, 89, 109, 7, 18, 8, 18, 11, 23, 33, 42, 41, 42, 45, 42, 46, 42, 62,
	42, 68, 42, 69, 42, 94, 42, 33, 43, 41, 43, 45, 43, 46, 43, 62, 43, 68, 43,
	69, 43, 94, 43, 33, 44, 41, 44, 45, 67, 46, 44, 62, 67, 68, 44, 69, 67, 94,
	67, 7, 19, 8, 19, 33, 45, 41, 62, 46, 69, 68, 94, 7, 20, 8, 20, 7, 21, 8, 21,
	0, 7, 5, 8, 0, 389,
}

var tmRuleLen = []int8{
	1, 1, 1, 2, 2, 1, 1, 1, 1, 5, 1, 1, 1, 1, 1, 1, 6, 1, 4, 1, 2, 1, 2, 1, 2, 1,
	7, 6, 6, 5, 6, 5, 5, 4, 2, 2, 1, 2, 1, 2, 0, 7, 6, 6, 5, 1, 1, 1, 14, 13, 13,
	12, 13, 12, 12, 11, 13, 12, 12, 11, 12, 11, 11, 10, 13, 12, 12, 11, 12, 11,
	11, 10, 12, 11, 11, 10, 11, 10, 10, 9, 13, 12, 12, 11, 12, 11, 11, 10, 12,
	11, 11, 10, 11, 10, 10, 9, 12, 11, 11, 10, 11, 10, 10, 9, 11, 10, 10, 9, 10,
	9, 9, 8, 1, 1, 10, 9, 9, 8, 9, 8, 8, 7, 9, 8, 8, 7, 8, 7, 7, 6, 1, 1, 2, 2,
	1, 2, 1, 2, 1, 7, 6, 6, 5, 1, 1, 3, 2, 1, 2, 7, 6, 6, 5, 2, 1, 1, 1, 1, 1, 2,
	2, 1, 2, 2, 0, 2, 1,
}

var tmRuleSymbol = []int32{
	28, 28, 29, 30, 30, 30, 30, 31, 32, 33, 34, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 43, 43, 43, 43, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 45, 45,
	46, 47, 47, 48, 48, 48, 48, 49, 50, 51, 52, 52, 52, 52, 52, 52, 52, 52, 52,
	52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
	52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52,
	52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 53, 54,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 56, 56, 56,
	56, 57, 57, 58, 59, 59, 60, 60, 60, 60, 61, 62, 63, 63, 64, 64, 65, 65, 65,
	65, 66, 66, 67, 67, 67, 67, 67, 67, 68, 68, 69, 69, 70, 70,
}

var tmRuleType = [...]NodeType{
	0,            // Comment : BlockComment
	0,            // Comment : EolComment
	0,            // WhiteSpace : WhiteSpace$1
	0,            // WhiteSpace$1 : WhiteSpace$1 Comment
	0,            // WhiteSpace$1 : WhiteSpace$1 WS
	0,            // WhiteSpace$1 : Comment
	0,            // WhiteSpace$1 : WS
	OptionName,   // OptionName : Name
	OptionValue,  // OptionValue : StringLiteral
	0,            // Option : 'option' OptionName '=' OptionValue ';'
	0,            // TypeRef : Name
	0,            // TypeRef : Primitive
	FieldName,    // FieldName : Name
	ScalarType,   // ScalarType : TypeRef
	MapKeyType,   // MapKeyType : Primitive
	MapValueType, // MapValueType : TypeRef
	0,            // MapType : 'map' '[' MapKeyType ':' MapValueType ']'
	ListElement,  // ListElementType : TypeRef
	0,            // ListType : 'list' '[' ListElementType ']'
	FieldMod,     // FieldMod : Modifier
	0,            // FieldType : ScalarType FieldMod
	0,            // FieldType : ScalarType
	0,            // FieldType : MapType FieldMod
	0,            // FieldType : MapType
	0,            // FieldType : ListType FieldMod
	0,            // FieldType : ListType
	0,            // FieldDef : FieldName WhiteSpace ':' WhiteSpace FieldType WhiteSpace ';'
	0,            // FieldDef : FieldName WhiteSpace ':' WhiteSpace FieldType ';'
	0,            // FieldDef : FieldName WhiteSpace ':' FieldType WhiteSpace ';'
	0,            // FieldDef : FieldName WhiteSpace ':' FieldType ';'
	0,            // FieldDef : FieldName ':' WhiteSpace FieldType WhiteSpace ';'
	0,            // FieldDef : FieldName ':' WhiteSpace FieldType ';'
	0,            // FieldDef : FieldName ':' FieldType WhiteSpace ';'
	0,            // FieldDef : FieldName ':' FieldType ';'
	0,            // FieldDef : error ';'
	0,            // FieldDef : error '}'
	0,            // FieldDefList : FieldDef
	0,            // FieldDefList : FieldDef WhiteSpace
	MessageName,  // MessageName : Name
	0,            // FieldDefList_optlist : FieldDefList_optlist FieldDefList
	0,            // FieldDefList_optlist :
	0,            // MessageDef : 'message' MessageName WhiteSpace '{' WhiteSpace FieldDefList_optlist '}'
	0,            // MessageDef : 'message' MessageName WhiteSpace '{' FieldDefList_optlist '}'
	0,            // MessageDef : 'message' MessageName '{' WhiteSpace FieldDefList_optlist '}'
	0,            // MessageDef : 'message' MessageName '{' FieldDefList_optlist '}'
	RpcName,      // RpcName : Name
	RpcRequest,   // RpcRequest : TypeRef
	RpcResponse,  // RpcResponse : TypeRef
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest WhiteSpace ')' WhiteSpace ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest WhiteSpace ')' WhiteSpace ':' WhiteSpace RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest WhiteSpace ')' WhiteSpace ':' RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest WhiteSpace ')' WhiteSpace ':' RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest WhiteSpace ')' ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest WhiteSpace ')' ':' WhiteSpace RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest WhiteSpace ')' ':' RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest WhiteSpace ')' ':' RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest ')' WhiteSpace ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest ')' WhiteSpace ':' WhiteSpace RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest ')' WhiteSpace ':' RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest ')' WhiteSpace ':' RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest ')' ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest ')' ':' WhiteSpace RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest ')' ':' RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest ')' ':' RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest WhiteSpace ')' WhiteSpace ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest WhiteSpace ')' WhiteSpace ':' WhiteSpace RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest WhiteSpace ')' WhiteSpace ':' RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest WhiteSpace ')' WhiteSpace ':' RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest WhiteSpace ')' ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest WhiteSpace ')' ':' WhiteSpace RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest WhiteSpace ')' ':' RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest WhiteSpace ')' ':' RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest ')' WhiteSpace ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest ')' WhiteSpace ':' WhiteSpace RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest ')' WhiteSpace ':' RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest ')' WhiteSpace ':' RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest ')' ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest ')' ':' WhiteSpace RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest ')' ':' RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest ')' ':' RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest WhiteSpace ')' WhiteSpace ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest WhiteSpace ')' WhiteSpace ':' WhiteSpace RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest WhiteSpace ')' WhiteSpace ':' RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest WhiteSpace ')' WhiteSpace ':' RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest WhiteSpace ')' ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest WhiteSpace ')' ':' WhiteSpace RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest WhiteSpace ')' ':' RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest WhiteSpace ')' ':' RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest ')' WhiteSpace ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest ')' WhiteSpace ':' WhiteSpace RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest ')' WhiteSpace ':' RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest ')' WhiteSpace ':' RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest ')' ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest ')' ':' WhiteSpace RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest ')' ':' RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest ')' ':' RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName '(' RpcRequest WhiteSpace ')' WhiteSpace ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName '(' RpcRequest WhiteSpace ')' WhiteSpace ':' WhiteSpace RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName '(' RpcRequest WhiteSpace ')' WhiteSpace ':' RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName '(' RpcRequest WhiteSpace ')' WhiteSpace ':' RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName '(' RpcRequest WhiteSpace ')' ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName '(' RpcRequest WhiteSpace ')' ':' WhiteSpace RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName '(' RpcRequest WhiteSpace ')' ':' RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName '(' RpcRequest WhiteSpace ')' ':' RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName '(' RpcRequest ')' WhiteSpace ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName '(' RpcRequest ')' WhiteSpace ':' WhiteSpace RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName '(' RpcRequest ')' WhiteSpace ':' RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName '(' RpcRequest ')' WhiteSpace ':' RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName '(' RpcRequest ')' ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName '(' RpcRequest ')' ':' WhiteSpace RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName '(' RpcRequest ')' ':' RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName '(' RpcRequest ')' ':' RpcResponse ';'
	PubName,      // PubName : Name
	PubMessage,   // PubMessage : TypeRef
	0,            // PubMethod : 'pub' PubName WhiteSpace '(' WhiteSpace PubMessage WhiteSpace ')' WhiteSpace ';'
	0,            // PubMethod : 'pub' PubName WhiteSpace '(' WhiteSpace PubMessage WhiteSpace ')' ';'
	0,            // PubMethod : 'pub' PubName WhiteSpace '(' WhiteSpace PubMessage ')' WhiteSpace ';'
	0,            // PubMethod : 'pub' PubName WhiteSpace '(' WhiteSpace PubMessage ')' ';'
	0,            // PubMethod : 'pub' PubName WhiteSpace '(' PubMessage WhiteSpace ')' WhiteSpace ';'
	0,            // PubMethod : 'pub' PubName WhiteSpace '(' PubMessage WhiteSpace ')' ';'
	0,            // PubMethod : 'pub' PubName WhiteSpace '(' PubMessage ')' WhiteSpace ';'
	0,            // PubMethod : 'pub' PubName WhiteSpace '(' PubMessage ')' ';'
	0,            // PubMethod : 'pub' PubName '(' WhiteSpace PubMessage WhiteSpace ')' WhiteSpace ';'
	0,            // PubMethod : 'pub' PubName '(' WhiteSpace PubMessage WhiteSpace ')' ';'
	0,            // PubMethod : 'pub' PubName '(' WhiteSpace PubMessage ')' WhiteSpace ';'
	0,            // PubMethod : 'pub' PubName '(' WhiteSpace PubMessage ')' ';'
	0,            // PubMethod : 'pub' PubName '(' PubMessage WhiteSpace ')' WhiteSpace ';'
	0,            // PubMethod : 'pub' PubName '(' PubMessage WhiteSpace ')' ';'
	0,            // PubMethod : 'pub' PubName '(' PubMessage ')' WhiteSpace ';'
	0,            // PubMethod : 'pub' PubName '(' PubMessage ')' ';'
	0,            // Method : PubMethod
	0,            // Method : RpcMethod
	0,            // Method : error ';'
	0,            // Method : error '}'
	0,            // MethodList : Method
	0,            // MethodList : Method WhiteSpace
	ServiceName,  // ServiceName : Name
	0,            // MethodList_list : MethodList_list MethodList
	0,            // MethodList_list : MethodList
	0,            // ServiceDef : 'service' ServiceName WhiteSpace '{' WhiteSpace MethodList_list '}'
	0,            // ServiceDef : 'service' ServiceName WhiteSpace '{' MethodList_list '}'
	0,            // ServiceDef : 'service' ServiceName '{' WhiteSpace MethodList_list '}'
	0,            // ServiceDef : 'service' ServiceName '{' MethodList_list '}'
	EnumName,     // EnumName : Name
	EnumValue,    // EnumValue : Value
	0,            // EnumField : EnumValue WhiteSpace ';'
	0,            // EnumField : EnumValue ';'
	0,            // EnumValueList : EnumField
	0,            // EnumValueList : EnumField WhiteSpace
	0,            // EnumDef : 'enum' EnumName WhiteSpace '{' WhiteSpace EnumValueList_list '}'
	0,            // EnumDef : 'enum' EnumName WhiteSpace '{' EnumValueList_list '}'
	0,            // EnumDef : 'enum' EnumName '{' WhiteSpace EnumValueList_list '}'
	0,            // EnumDef : 'enum' EnumName '{' EnumValueList_list '}'
	0,            // EnumValueList_list : EnumValueList_list EnumValueList
	0,            // EnumValueList_list : EnumValueList
	0,            // Definition : MessageDef
	0,            // Definition : ServiceDef
	0,            // Definition : EnumDef
	0,            // Definition : Option
	0,            // Definition : error ';'
	0,            // Definition : error '}'
	0,            // DefinitionList : Definition
	0,            // DefinitionList : Definition WhiteSpace
	0,            // DefinitionList_optlist : DefinitionList_optlist DefinitionList
	0,            // DefinitionList_optlist :
	0,            // ServoFile : WhiteSpace DefinitionList_optlist
	0,            // ServoFile : DefinitionList_optlist
}

// set(follow ERROR) = SEMICOLON, RBRACE
var afterErr = []token.Type{
	23, 25,
}
