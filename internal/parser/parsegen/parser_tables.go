// generated by Textmapper; DO NOT EDIT

package parsegen

import (
	"fmt"

	"github.com/egoodhall/servo/internal/parser/parsegen/token"
)

var tmNonterminals = [...]string{
	"Comment",
	"WhiteSpace",
	"WhiteSpace$1",
	"OptionName",
	"OptionValue",
	"Option",
	"TypeRef",
	"FieldName",
	"FieldType",
	"FieldDef",
	"FieldDefList",
	"MessageName",
	"FieldDefList_optlist",
	"MessageDef",
	"RpcName",
	"RpcRequest",
	"RpcResponse",
	"RpcMethod",
	"PubName",
	"PubMessage",
	"PubMethod",
	"Method",
	"MethodList",
	"ServiceName",
	"MethodList_list",
	"ServiceDef",
	"EnumName",
	"EnumValue",
	"EnumField",
	"EnumValueList",
	"EnumDef",
	"EnumValueList_list",
	"Definition",
	"DefinitionList",
	"DefinitionList_optlist",
	"ServoFile",
}

func symbolName(sym int32) string {
	if sym == noToken {
		return "<no-token>"
	}
	if sym < int32(token.NumTokens) {
		return token.Type(sym).String()
	}
	if i := int(sym) - int(token.NumTokens); i < len(tmNonterminals) {
		return tmNonterminals[i]
	}
	return fmt.Sprintf("nonterminal(%d)", sym)
}

var tmAction = []int32{
	-3, 6, 1, 0, 5, 155, -23, -65, -79, 4, 3, -1, -1, -1, -1, -1, 149, 146, 147,
	148, -93, 154, 134, -1, 29, -1, 127, -1, 7, -1, 150, 151, 153, -1, -1, -113,
	-1, -1, -1, -1, 135, -1, -1, -127, 145, -1, -1, 31, -1, -139, -1, -1, -1, -1,
	122, 121, -153, 129, -1, -1, 8, -1, -1, 137, -1, 139, 143, 144, -1, -1, -1,
	-1, 14, 35, -1, -169, 30, 31, -1, 123, 124, 36, -1, 103, -1, -1, 126, 133,
	128, -1, -1, 9, 142, 136, -1, 141, 34, 25, 26, -1, -1, 28, -1, 33, -1, -1,
	-1, -1, 132, -1, 131, 140, -1, 10, 11, -1, -183, -1, -1, 32, -1, 37, -1, -1,
	-1, 104, -1, -1, 130, 12, 13, -1, 15, 24, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, 22, -1, 23, -1, 20, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, 120, -1, -1, -1, -1, -1, 21, 18, -1, 19, -1, -1, -1, -1, 38, -1, -1, -1,
	-1, -1, -1, -1, -1, -1, 116, -1, -1, 119, 118, -1, -1, -1, 112, -1, -1, 17,
	-1, -1, -1, -1, -1, -1, 102, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, 115, 114, -1, 117, 108, -1, -1, 111, 110, -1, -1, 86, -1, -1, -1, -1,
	-1, -1, 100, -1, 101, -1, 98, -1, -1, 94, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	70, -1, -1, -1, -1, -1, -1, 113, 107, 106, -1, 109, 84, -1, 85, -1, 82, -1,
	-1, 78, -1, -1, -1, 99, 96, -1, 97, 92, -1, 93, -1, 90, -1, -1, 54, -1, -1,
	-1, -1, -1, -1, 68, -1, 69, -1, 66, -1, -1, 62, -1, -1, -1, 105, 83, 80, -1,
	81, 76, -1, 77, -1, 74, -1, 95, 91, 88, -1, 89, 52, -1, 53, -1, 50, -1, -1,
	46, -1, -1, -1, 67, 64, -1, 65, 60, -1, 61, -1, 58, -1, 79, 75, 72, -1, 73,
	87, 51, 48, -1, 49, 44, -1, 45, -1, 42, -1, 63, 59, 56, -1, 57, 71, 47, 43,
	40, -1, 41, 55, 39, -1, -2,
}

var tmLalr = []int32{
	6, -1, 7, -1, 8, -1, 0, 155, 2, 155, 3, 155, 4, 155, 5, 155, 9, 155, -1, -2,
	6, -1, 7, -1, 8, -1, 0, 2, 2, 2, 3, 2, 4, 2, 5, 2, 9, 2, 10, 2, 11, 2, 13, 2,
	14, 2, 15, 2, 16, 2, 17, 2, 18, 2, 19, 2, 20, 2, 21, 2, -1, -2, 2, -1, 3, -1,
	4, -1, 5, -1, 9, -1, 0, 157, -1, -2, 2, -1, 3, -1, 4, -1, 5, -1, 9, -1, 0,
	156, -1, -2, 6, -1, 7, -1, 8, -1, 0, 152, 2, 152, 3, 152, 4, 152, 5, 152, 9,
	152, -1, -2, 6, -1, 7, -1, 8, -1, 9, 31, 10, 31, 21, 31, -1, -2, 6, -1, 7,
	-1, 8, -1, 17, 138, 21, 138, -1, -2, 6, -1, 7, -1, 8, -1, 9, 31, 10, 31, 21,
	31, -1, -2, 6, -1, 7, -1, 8, -1, 9, 125, 13, 125, 14, 125, 21, 125, -1, -2,
	6, -1, 7, -1, 8, -1, 9, 27, 10, 27, 21, 27, -1, -2, 12, -1, 6, 16, 7, 16, 8,
	16, 19, 16, -1, -2,
}

var tmGoto = []int32{
	0, 2, 2, 6, 10, 14, 18, 220, 422, 624, 740, 848, 936, 938, 954, 970, 978,
	1010, 1026, 1062, 1252, 1264, 1296, 1298, 1300, 1502, 1702, 1902, 1904, 1906,
	1910, 1998, 2006, 2014, 2022, 2030, 2032, 2040, 2044, 2046, 2054, 2118, 2134,
	2136, 2144, 2160, 2176, 2192, 2194, 2202, 2206, 2208, 2224, 2240, 2256, 2260,
	2268, 2272, 2276, 2280, 2282,
}

var tmFromTo = []int16{
	373, 374, 7, 11, 8, 11, 7, 12, 8, 12, 7, 13, 8, 13, 7, 14, 8, 14, 0, 1, 6, 9,
	20, 1, 23, 1, 25, 1, 27, 1, 33, 1, 35, 1, 37, 1, 42, 1, 43, 1, 46, 1, 49, 1,
	56, 1, 59, 1, 74, 1, 75, 1, 82, 1, 84, 1, 99, 1, 104, 1, 106, 1, 117, 1, 118,
	1, 122, 1, 123, 1, 126, 1, 127, 1, 131, 1, 136, 1, 137, 1, 138, 1, 141, 1,
	142, 1, 143, 1, 146, 1, 150, 1, 153, 1, 155, 1, 157, 1, 158, 1, 159, 1, 161,
	1, 165, 1, 166, 1, 167, 1, 173, 1, 175, 1, 178, 1, 179, 1, 180, 1, 182, 1,
	184, 1, 186, 1, 189, 1, 193, 1, 197, 1, 200, 1, 201, 1, 202, 1, 204, 1, 208,
	1, 210, 1, 211, 1, 212, 1, 214, 1, 216, 1, 217, 1, 218, 1, 226, 1, 230, 1,
	234, 1, 236, 1, 237, 1, 241, 1, 244, 1, 248, 1, 250, 1, 251, 1, 252, 1, 254,
	1, 258, 1, 260, 1, 261, 1, 270, 1, 273, 1, 277, 1, 285, 1, 288, 1, 292, 1,
	294, 1, 295, 1, 299, 1, 302, 1, 306, 1, 315, 1, 326, 1, 329, 1, 333, 1, 341,
	1, 357, 1, 0, 2, 6, 2, 20, 2, 23, 2, 25, 2, 27, 2, 33, 2, 35, 2, 37, 2, 42,
	2, 43, 2, 46, 2, 49, 2, 56, 2, 59, 2, 74, 2, 75, 2, 82, 2, 84, 2, 99, 2, 104,
	2, 106, 2, 117, 2, 118, 2, 122, 2, 123, 2, 126, 2, 127, 2, 131, 2, 136, 2,
	137, 2, 138, 2, 141, 2, 142, 2, 143, 2, 146, 2, 150, 2, 153, 2, 155, 2, 157,
	2, 158, 2, 159, 2, 161, 2, 165, 2, 166, 2, 167, 2, 173, 2, 175, 2, 178, 2,
	179, 2, 180, 2, 182, 2, 184, 2, 186, 2, 189, 2, 193, 2, 197, 2, 200, 2, 201,
	2, 202, 2, 204, 2, 208, 2, 210, 2, 211, 2, 212, 2, 214, 2, 216, 2, 217, 2,
	218, 2, 226, 2, 230, 2, 234, 2, 236, 2, 237, 2, 241, 2, 244, 2, 248, 2, 250,
	2, 251, 2, 252, 2, 254, 2, 258, 2, 260, 2, 261, 2, 270, 2, 273, 2, 277, 2,
	285, 2, 288, 2, 292, 2, 294, 2, 295, 2, 299, 2, 302, 2, 306, 2, 315, 2, 326,
	2, 329, 2, 333, 2, 341, 2, 357, 2, 0, 3, 6, 3, 20, 3, 23, 3, 25, 3, 27, 3,
	33, 3, 35, 3, 37, 3, 42, 3, 43, 3, 46, 3, 49, 3, 56, 3, 59, 3, 74, 3, 75, 3,
	82, 3, 84, 3, 99, 3, 104, 3, 106, 3, 117, 3, 118, 3, 122, 3, 123, 3, 126, 3,
	127, 3, 131, 3, 136, 3, 137, 3, 138, 3, 141, 3, 142, 3, 143, 3, 146, 3, 150,
	3, 153, 3, 155, 3, 157, 3, 158, 3, 159, 3, 161, 3, 165, 3, 166, 3, 167, 3,
	173, 3, 175, 3, 178, 3, 179, 3, 180, 3, 182, 3, 184, 3, 186, 3, 189, 3, 193,
	3, 197, 3, 200, 3, 201, 3, 202, 3, 204, 3, 208, 3, 210, 3, 211, 3, 212, 3,
	214, 3, 216, 3, 217, 3, 218, 3, 226, 3, 230, 3, 234, 3, 236, 3, 237, 3, 241,
	3, 244, 3, 248, 3, 250, 3, 251, 3, 252, 3, 254, 3, 258, 3, 260, 3, 261, 3,
	270, 3, 273, 3, 277, 3, 285, 3, 288, 3, 292, 3, 294, 3, 295, 3, 299, 3, 302,
	3, 306, 3, 315, 3, 326, 3, 329, 3, 333, 3, 341, 3, 357, 3, 7, 15, 8, 15, 37,
	50, 48, 71, 53, 50, 58, 50, 59, 50, 70, 71, 78, 71, 85, 50, 89, 50, 90, 50,
	99, 112, 102, 71, 104, 112, 106, 112, 109, 50, 115, 112, 118, 112, 120, 112,
	123, 112, 124, 112, 127, 112, 135, 112, 140, 112, 145, 112, 155, 112, 173,
	112, 176, 112, 179, 112, 180, 112, 184, 112, 199, 112, 201, 112, 202, 112,
	207, 112, 209, 112, 211, 112, 212, 112, 215, 112, 217, 112, 218, 112, 233,
	112, 235, 112, 237, 112, 247, 112, 249, 112, 251, 112, 252, 112, 257, 112,
	259, 112, 261, 112, 276, 112, 291, 112, 293, 112, 295, 112, 305, 112, 332,
	112, 11, 22, 12, 24, 13, 26, 14, 28, 48, 72, 51, 81, 52, 83, 70, 72, 78, 72,
	99, 113, 102, 72, 104, 113, 106, 113, 115, 113, 118, 113, 120, 113, 123, 113,
	124, 113, 127, 113, 135, 113, 140, 113, 145, 113, 155, 113, 173, 113, 176,
	113, 179, 113, 180, 113, 184, 113, 199, 113, 201, 113, 202, 113, 207, 113,
	209, 113, 211, 113, 212, 113, 215, 113, 217, 113, 218, 113, 233, 113, 235,
	113, 237, 113, 247, 113, 249, 113, 251, 113, 252, 113, 257, 113, 259, 113,
	261, 113, 276, 113, 291, 113, 293, 113, 295, 113, 305, 113, 332, 113, 99,
	114, 104, 114, 106, 114, 115, 114, 118, 114, 120, 114, 123, 114, 124, 114,
	127, 114, 135, 114, 140, 114, 145, 114, 155, 114, 173, 114, 176, 114, 179,
	114, 180, 114, 184, 114, 199, 114, 201, 114, 202, 114, 207, 114, 209, 114,
	211, 114, 212, 114, 215, 114, 217, 114, 218, 114, 233, 114, 235, 114, 237,
	114, 247, 114, 249, 114, 251, 114, 252, 114, 257, 114, 259, 114, 261, 114,
	276, 114, 291, 114, 293, 114, 295, 114, 305, 114, 332, 114, 116, 132, 37, 51,
	53, 51, 58, 51, 59, 51, 85, 51, 89, 51, 90, 51, 109, 51, 37, 52, 53, 52, 58,
	52, 59, 52, 85, 52, 89, 52, 90, 52, 109, 52, 82, 104, 84, 106, 105, 123, 107,
	127, 122, 138, 126, 143, 137, 153, 139, 157, 141, 159, 142, 161, 144, 165,
	146, 167, 154, 175, 158, 182, 160, 186, 162, 189, 166, 193, 168, 197, 183,
	214, 194, 226, 33, 40, 41, 40, 45, 40, 46, 40, 62, 40, 68, 40, 69, 40, 94,
	40, 74, 99, 100, 118, 138, 155, 153, 173, 156, 179, 157, 180, 159, 184, 174,
	201, 175, 202, 181, 211, 182, 212, 185, 217, 186, 218, 203, 237, 213, 251,
	214, 252, 219, 261, 253, 295, 15, 30, 42, 63, 50, 79, 61, 91, 64, 93, 71, 97,
	112, 129, 117, 133, 131, 147, 134, 149, 136, 151, 143, 163, 148, 169, 150,
	170, 152, 172, 161, 187, 164, 190, 165, 191, 167, 195, 171, 198, 178, 205,
	188, 220, 189, 221, 192, 223, 193, 224, 196, 227, 197, 228, 200, 231, 204,
	238, 206, 240, 208, 242, 210, 245, 216, 255, 222, 262, 225, 263, 226, 264,
	229, 266, 230, 267, 232, 269, 234, 271, 236, 274, 239, 278, 241, 279, 243,
	281, 244, 282, 246, 284, 248, 286, 250, 289, 254, 296, 256, 298, 258, 300,
	260, 303, 265, 307, 268, 308, 270, 309, 272, 311, 273, 312, 275, 314, 277,
	316, 280, 318, 283, 319, 285, 320, 287, 322, 288, 323, 290, 325, 292, 327,
	294, 330, 297, 334, 299, 335, 301, 337, 302, 338, 304, 340, 306, 342, 310,
	344, 313, 345, 315, 346, 317, 348, 321, 349, 324, 350, 326, 351, 328, 353,
	329, 354, 331, 356, 333, 358, 336, 360, 339, 361, 341, 362, 343, 364, 347,
	365, 352, 366, 355, 367, 357, 368, 359, 370, 363, 371, 369, 372, 23, 33, 25,
	35, 27, 37, 34, 46, 36, 49, 38, 59, 15, 31, 45, 66, 48, 73, 50, 80, 58, 87,
	62, 92, 69, 95, 70, 96, 71, 98, 78, 103, 85, 108, 90, 110, 94, 111, 102, 119,
	109, 128, 112, 130, 29, 39, 39, 60, 0, 4, 6, 10, 20, 4, 23, 4, 25, 4, 27, 4,
	33, 4, 35, 4, 37, 4, 42, 4, 43, 4, 46, 4, 49, 4, 56, 4, 59, 4, 74, 4, 75, 4,
	82, 4, 84, 4, 99, 4, 104, 4, 106, 4, 117, 4, 118, 4, 122, 4, 123, 4, 126, 4,
	127, 4, 131, 4, 136, 4, 137, 4, 138, 4, 141, 4, 142, 4, 143, 4, 146, 4, 150,
	4, 153, 4, 155, 4, 157, 4, 158, 4, 159, 4, 161, 4, 165, 4, 166, 4, 167, 4,
	173, 4, 175, 4, 178, 4, 179, 4, 180, 4, 182, 4, 184, 4, 186, 4, 189, 4, 193,
	4, 197, 4, 200, 4, 201, 4, 202, 4, 204, 4, 208, 4, 210, 4, 211, 4, 212, 4,
	214, 4, 216, 4, 217, 4, 218, 4, 226, 4, 230, 4, 234, 4, 236, 4, 237, 4, 241,
	4, 244, 4, 248, 4, 250, 4, 251, 4, 252, 4, 254, 4, 258, 4, 260, 4, 261, 4,
	270, 4, 273, 4, 277, 4, 285, 4, 288, 4, 292, 4, 294, 4, 295, 4, 299, 4, 302,
	4, 306, 4, 315, 4, 326, 4, 329, 4, 333, 4, 341, 4, 357, 4, 0, 5, 20, 32, 23,
	34, 25, 36, 27, 38, 33, 41, 35, 47, 37, 53, 42, 64, 43, 65, 46, 68, 49, 77,
	56, 86, 59, 89, 74, 100, 75, 101, 82, 105, 84, 107, 99, 115, 104, 120, 106,
	124, 117, 134, 118, 135, 122, 139, 123, 140, 126, 144, 127, 145, 131, 148,
	136, 152, 137, 154, 138, 156, 141, 160, 142, 162, 143, 164, 146, 168, 150,
	171, 153, 174, 155, 176, 157, 181, 158, 183, 159, 185, 161, 188, 165, 192,
	166, 194, 167, 196, 173, 199, 175, 203, 178, 206, 179, 207, 180, 209, 182,
	213, 184, 215, 186, 219, 189, 222, 193, 225, 197, 229, 200, 232, 201, 233,
	202, 235, 204, 239, 208, 243, 210, 246, 211, 247, 212, 249, 214, 253, 216,
	256, 217, 257, 218, 259, 226, 265, 230, 268, 234, 272, 236, 275, 237, 276,
	241, 280, 244, 283, 248, 287, 250, 290, 251, 291, 252, 293, 254, 297, 258,
	301, 260, 304, 261, 305, 270, 310, 273, 313, 277, 317, 285, 321, 288, 324,
	292, 328, 294, 331, 295, 332, 299, 336, 302, 339, 306, 343, 315, 347, 326,
	352, 329, 355, 333, 359, 341, 363, 357, 369, 0, 6, 20, 6, 23, 6, 25, 6, 27,
	6, 33, 6, 35, 6, 37, 6, 42, 6, 43, 6, 46, 6, 49, 6, 56, 6, 59, 6, 74, 6, 75,
	6, 82, 6, 84, 6, 99, 6, 104, 6, 106, 6, 117, 6, 118, 6, 122, 6, 123, 6, 126,
	6, 127, 6, 131, 6, 136, 6, 137, 6, 138, 6, 141, 6, 142, 6, 143, 6, 146, 6,
	150, 6, 153, 6, 155, 6, 157, 6, 158, 6, 159, 6, 161, 6, 165, 6, 166, 6, 167,
	6, 173, 6, 175, 6, 178, 6, 179, 6, 180, 6, 182, 6, 184, 6, 186, 6, 189, 6,
	193, 6, 197, 6, 200, 6, 201, 6, 202, 6, 204, 6, 208, 6, 210, 6, 211, 6, 212,
	6, 214, 6, 216, 6, 217, 6, 218, 6, 226, 6, 230, 6, 234, 6, 236, 6, 237, 6,
	241, 6, 244, 6, 248, 6, 250, 6, 251, 6, 252, 6, 254, 6, 258, 6, 260, 6, 261,
	6, 270, 6, 273, 6, 277, 6, 285, 6, 288, 6, 292, 6, 294, 6, 295, 6, 299, 6,
	302, 6, 306, 6, 315, 6, 326, 6, 329, 6, 333, 6, 341, 6, 357, 6, 14, 29, 39,
	61, 7, 16, 8, 16, 99, 116, 104, 121, 106, 125, 115, 116, 118, 116, 120, 121,
	123, 121, 124, 125, 127, 125, 135, 116, 140, 121, 145, 125, 155, 177, 173,
	177, 176, 177, 179, 177, 180, 177, 184, 177, 199, 177, 201, 177, 202, 177,
	207, 177, 209, 177, 211, 177, 212, 177, 215, 177, 217, 177, 218, 177, 233,
	177, 235, 177, 237, 177, 247, 177, 249, 177, 251, 177, 252, 177, 257, 177,
	259, 177, 261, 177, 276, 177, 291, 177, 293, 177, 295, 177, 305, 177, 332,
	177, 48, 74, 70, 74, 78, 74, 102, 74, 99, 117, 115, 131, 118, 136, 135, 150,
	48, 75, 70, 75, 78, 75, 102, 75, 48, 76, 70, 76, 78, 76, 102, 76, 12, 25, 35,
	48, 47, 70, 49, 78, 77, 102, 7, 17, 8, 17, 51, 82, 104, 122, 120, 137, 123,
	141, 140, 158, 155, 178, 173, 200, 176, 204, 179, 208, 180, 210, 184, 216,
	199, 230, 201, 234, 202, 236, 207, 241, 209, 244, 211, 248, 212, 250, 215,
	254, 217, 258, 218, 260, 233, 270, 235, 273, 237, 277, 247, 285, 249, 288,
	251, 292, 252, 294, 257, 299, 259, 302, 261, 306, 276, 315, 291, 326, 293,
	329, 295, 333, 305, 341, 332, 357, 37, 54, 53, 54, 58, 54, 59, 54, 85, 54,
	89, 54, 90, 54, 109, 54, 52, 84, 106, 126, 124, 142, 127, 146, 145, 166, 37,
	55, 53, 55, 58, 55, 59, 55, 85, 55, 89, 55, 90, 55, 109, 55, 37, 56, 53, 56,
	58, 56, 59, 56, 85, 56, 89, 56, 90, 56, 109, 56, 37, 57, 53, 57, 58, 88, 59,
	57, 85, 88, 89, 57, 90, 88, 109, 88, 13, 27, 37, 58, 53, 85, 59, 90, 89, 109,
	7, 18, 8, 18, 11, 23, 33, 42, 41, 42, 45, 42, 46, 42, 62, 42, 68, 42, 69, 42,
	94, 42, 33, 43, 41, 43, 45, 43, 46, 43, 62, 43, 68, 43, 69, 43, 94, 43, 33,
	44, 41, 44, 45, 67, 46, 44, 62, 67, 68, 44, 69, 67, 94, 67, 7, 19, 8, 19, 33,
	45, 41, 62, 46, 69, 68, 94, 7, 20, 8, 20, 7, 21, 8, 21, 0, 7, 5, 8, 0, 373,
}

var tmRuleLen = []int8{
	1, 1, 1, 2, 2, 1, 1, 1, 1, 5, 1, 1, 2, 2, 1, 2, 1, 7, 6, 6, 5, 6, 5, 5, 4, 2,
	2, 1, 2, 1, 2, 0, 7, 6, 6, 5, 1, 1, 1, 14, 13, 13, 12, 13, 12, 12, 11, 13,
	12, 12, 11, 12, 11, 11, 10, 13, 12, 12, 11, 12, 11, 11, 10, 12, 11, 11, 10,
	11, 10, 10, 9, 13, 12, 12, 11, 12, 11, 11, 10, 12, 11, 11, 10, 11, 10, 10, 9,
	12, 11, 11, 10, 11, 10, 10, 9, 11, 10, 10, 9, 10, 9, 9, 8, 1, 1, 10, 9, 9, 8,
	9, 8, 8, 7, 9, 8, 8, 7, 8, 7, 7, 6, 1, 1, 2, 2, 1, 2, 1, 2, 1, 7, 6, 6, 5, 1,
	1, 3, 2, 1, 2, 7, 6, 6, 5, 2, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 0, 2, 1,
}

var tmRuleSymbol = []int32{
	24, 24, 25, 26, 26, 26, 26, 27, 28, 29, 30, 30, 30, 30, 31, 32, 32, 33, 33,
	33, 33, 33, 33, 33, 33, 33, 33, 34, 34, 35, 36, 36, 37, 37, 37, 37, 38, 39,
	40, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 42, 43, 44, 44, 44, 44, 44, 44, 44, 44, 44,
	44, 44, 44, 44, 44, 44, 44, 45, 45, 45, 45, 46, 46, 47, 48, 48, 49, 49, 49,
	49, 50, 51, 52, 52, 53, 53, 54, 54, 54, 54, 55, 55, 56, 56, 56, 56, 56, 56,
	57, 57, 58, 58, 59, 59,
}

var tmRuleType = [...]NodeType{
	0,           // Comment : BlockComment
	0,           // Comment : EolComment
	0,           // WhiteSpace : WhiteSpace$1
	0,           // WhiteSpace$1 : WhiteSpace$1 Comment
	0,           // WhiteSpace$1 : WhiteSpace$1 WS
	0,           // WhiteSpace$1 : Comment
	0,           // WhiteSpace$1 : WS
	OptionName,  // OptionName : Name
	OptionValue, // OptionValue : StringLiteral
	0,           // Option : 'option' OptionName '=' OptionValue ';'
	0,           // TypeRef : Name
	0,           // TypeRef : Primitive
	0,           // TypeRef : error ';'
	0,           // TypeRef : error '}'
	FieldName,   // FieldName : Name
	FieldType,   // FieldType : TypeRef Modifier
	FieldType,   // FieldType : TypeRef
	0,           // FieldDef : FieldName WhiteSpace ':' WhiteSpace FieldType WhiteSpace ';'
	0,           // FieldDef : FieldName WhiteSpace ':' WhiteSpace FieldType ';'
	0,           // FieldDef : FieldName WhiteSpace ':' FieldType WhiteSpace ';'
	0,           // FieldDef : FieldName WhiteSpace ':' FieldType ';'
	0,           // FieldDef : FieldName ':' WhiteSpace FieldType WhiteSpace ';'
	0,           // FieldDef : FieldName ':' WhiteSpace FieldType ';'
	0,           // FieldDef : FieldName ':' FieldType WhiteSpace ';'
	0,           // FieldDef : FieldName ':' FieldType ';'
	0,           // FieldDef : error ';'
	0,           // FieldDef : error '}'
	0,           // FieldDefList : FieldDef
	0,           // FieldDefList : FieldDef WhiteSpace
	MessageName, // MessageName : Name
	0,           // FieldDefList_optlist : FieldDefList_optlist FieldDefList
	0,           // FieldDefList_optlist :
	0,           // MessageDef : 'message' MessageName WhiteSpace '{' WhiteSpace FieldDefList_optlist '}'
	0,           // MessageDef : 'message' MessageName WhiteSpace '{' FieldDefList_optlist '}'
	0,           // MessageDef : 'message' MessageName '{' WhiteSpace FieldDefList_optlist '}'
	0,           // MessageDef : 'message' MessageName '{' FieldDefList_optlist '}'
	RpcName,     // RpcName : Name
	RpcRequest,  // RpcRequest : TypeRef
	RpcResponse, // RpcResponse : TypeRef
	0,           // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest WhiteSpace ')' WhiteSpace ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,           // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest WhiteSpace ')' WhiteSpace ':' WhiteSpace RpcResponse ';'
	0,           // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest WhiteSpace ')' WhiteSpace ':' RpcResponse WhiteSpace ';'
	0,           // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest WhiteSpace ')' WhiteSpace ':' RpcResponse ';'
	0,           // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest WhiteSpace ')' ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,           // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest WhiteSpace ')' ':' WhiteSpace RpcResponse ';'
	0,           // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest WhiteSpace ')' ':' RpcResponse WhiteSpace ';'
	0,           // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest WhiteSpace ')' ':' RpcResponse ';'
	0,           // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest ')' WhiteSpace ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,           // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest ')' WhiteSpace ':' WhiteSpace RpcResponse ';'
	0,           // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest ')' WhiteSpace ':' RpcResponse WhiteSpace ';'
	0,           // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest ')' WhiteSpace ':' RpcResponse ';'
	0,           // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest ')' ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,           // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest ')' ':' WhiteSpace RpcResponse ';'
	0,           // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest ')' ':' RpcResponse WhiteSpace ';'
	0,           // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest ')' ':' RpcResponse ';'
	0,           // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest WhiteSpace ')' WhiteSpace ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,           // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest WhiteSpace ')' WhiteSpace ':' WhiteSpace RpcResponse ';'
	0,           // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest WhiteSpace ')' WhiteSpace ':' RpcResponse WhiteSpace ';'
	0,           // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest WhiteSpace ')' WhiteSpace ':' RpcResponse ';'
	0,           // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest WhiteSpace ')' ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,           // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest WhiteSpace ')' ':' WhiteSpace RpcResponse ';'
	0,           // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest WhiteSpace ')' ':' RpcResponse WhiteSpace ';'
	0,           // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest WhiteSpace ')' ':' RpcResponse ';'
	0,           // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest ')' WhiteSpace ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,           // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest ')' WhiteSpace ':' WhiteSpace RpcResponse ';'
	0,           // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest ')' WhiteSpace ':' RpcResponse WhiteSpace ';'
	0,           // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest ')' WhiteSpace ':' RpcResponse ';'
	0,           // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest ')' ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,           // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest ')' ':' WhiteSpace RpcResponse ';'
	0,           // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest ')' ':' RpcResponse WhiteSpace ';'
	0,           // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest ')' ':' RpcResponse ';'
	0,           // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest WhiteSpace ')' WhiteSpace ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,           // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest WhiteSpace ')' WhiteSpace ':' WhiteSpace RpcResponse ';'
	0,           // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest WhiteSpace ')' WhiteSpace ':' RpcResponse WhiteSpace ';'
	0,           // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest WhiteSpace ')' WhiteSpace ':' RpcResponse ';'
	0,           // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest WhiteSpace ')' ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,           // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest WhiteSpace ')' ':' WhiteSpace RpcResponse ';'
	0,           // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest WhiteSpace ')' ':' RpcResponse WhiteSpace ';'
	0,           // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest WhiteSpace ')' ':' RpcResponse ';'
	0,           // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest ')' WhiteSpace ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,           // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest ')' WhiteSpace ':' WhiteSpace RpcResponse ';'
	0,           // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest ')' WhiteSpace ':' RpcResponse WhiteSpace ';'
	0,           // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest ')' WhiteSpace ':' RpcResponse ';'
	0,           // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest ')' ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,           // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest ')' ':' WhiteSpace RpcResponse ';'
	0,           // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest ')' ':' RpcResponse WhiteSpace ';'
	0,           // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest ')' ':' RpcResponse ';'
	0,           // RpcMethod : 'rpc' RpcName '(' RpcRequest WhiteSpace ')' WhiteSpace ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,           // RpcMethod : 'rpc' RpcName '(' RpcRequest WhiteSpace ')' WhiteSpace ':' WhiteSpace RpcResponse ';'
	0,           // RpcMethod : 'rpc' RpcName '(' RpcRequest WhiteSpace ')' WhiteSpace ':' RpcResponse WhiteSpace ';'
	0,           // RpcMethod : 'rpc' RpcName '(' RpcRequest WhiteSpace ')' WhiteSpace ':' RpcResponse ';'
	0,           // RpcMethod : 'rpc' RpcName '(' RpcRequest WhiteSpace ')' ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,           // RpcMethod : 'rpc' RpcName '(' RpcRequest WhiteSpace ')' ':' WhiteSpace RpcResponse ';'
	0,           // RpcMethod : 'rpc' RpcName '(' RpcRequest WhiteSpace ')' ':' RpcResponse WhiteSpace ';'
	0,           // RpcMethod : 'rpc' RpcName '(' RpcRequest WhiteSpace ')' ':' RpcResponse ';'
	0,           // RpcMethod : 'rpc' RpcName '(' RpcRequest ')' WhiteSpace ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,           // RpcMethod : 'rpc' RpcName '(' RpcRequest ')' WhiteSpace ':' WhiteSpace RpcResponse ';'
	0,           // RpcMethod : 'rpc' RpcName '(' RpcRequest ')' WhiteSpace ':' RpcResponse WhiteSpace ';'
	0,           // RpcMethod : 'rpc' RpcName '(' RpcRequest ')' WhiteSpace ':' RpcResponse ';'
	0,           // RpcMethod : 'rpc' RpcName '(' RpcRequest ')' ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,           // RpcMethod : 'rpc' RpcName '(' RpcRequest ')' ':' WhiteSpace RpcResponse ';'
	0,           // RpcMethod : 'rpc' RpcName '(' RpcRequest ')' ':' RpcResponse WhiteSpace ';'
	0,           // RpcMethod : 'rpc' RpcName '(' RpcRequest ')' ':' RpcResponse ';'
	PubName,     // PubName : Name
	PubMessage,  // PubMessage : TypeRef
	0,           // PubMethod : 'pub' PubName WhiteSpace '(' WhiteSpace PubMessage WhiteSpace ')' WhiteSpace ';'
	0,           // PubMethod : 'pub' PubName WhiteSpace '(' WhiteSpace PubMessage WhiteSpace ')' ';'
	0,           // PubMethod : 'pub' PubName WhiteSpace '(' WhiteSpace PubMessage ')' WhiteSpace ';'
	0,           // PubMethod : 'pub' PubName WhiteSpace '(' WhiteSpace PubMessage ')' ';'
	0,           // PubMethod : 'pub' PubName WhiteSpace '(' PubMessage WhiteSpace ')' WhiteSpace ';'
	0,           // PubMethod : 'pub' PubName WhiteSpace '(' PubMessage WhiteSpace ')' ';'
	0,           // PubMethod : 'pub' PubName WhiteSpace '(' PubMessage ')' WhiteSpace ';'
	0,           // PubMethod : 'pub' PubName WhiteSpace '(' PubMessage ')' ';'
	0,           // PubMethod : 'pub' PubName '(' WhiteSpace PubMessage WhiteSpace ')' WhiteSpace ';'
	0,           // PubMethod : 'pub' PubName '(' WhiteSpace PubMessage WhiteSpace ')' ';'
	0,           // PubMethod : 'pub' PubName '(' WhiteSpace PubMessage ')' WhiteSpace ';'
	0,           // PubMethod : 'pub' PubName '(' WhiteSpace PubMessage ')' ';'
	0,           // PubMethod : 'pub' PubName '(' PubMessage WhiteSpace ')' WhiteSpace ';'
	0,           // PubMethod : 'pub' PubName '(' PubMessage WhiteSpace ')' ';'
	0,           // PubMethod : 'pub' PubName '(' PubMessage ')' WhiteSpace ';'
	0,           // PubMethod : 'pub' PubName '(' PubMessage ')' ';'
	0,           // Method : PubMethod
	0,           // Method : RpcMethod
	0,           // Method : error ';'
	0,           // Method : error '}'
	0,           // MethodList : Method
	0,           // MethodList : Method WhiteSpace
	ServiceName, // ServiceName : Name
	0,           // MethodList_list : MethodList_list MethodList
	0,           // MethodList_list : MethodList
	0,           // ServiceDef : 'service' ServiceName WhiteSpace '{' WhiteSpace MethodList_list '}'
	0,           // ServiceDef : 'service' ServiceName WhiteSpace '{' MethodList_list '}'
	0,           // ServiceDef : 'service' ServiceName '{' WhiteSpace MethodList_list '}'
	0,           // ServiceDef : 'service' ServiceName '{' MethodList_list '}'
	EnumName,    // EnumName : Name
	EnumValue,   // EnumValue : Value
	0,           // EnumField : EnumValue WhiteSpace ';'
	0,           // EnumField : EnumValue ';'
	0,           // EnumValueList : EnumField
	0,           // EnumValueList : EnumField WhiteSpace
	0,           // EnumDef : 'enum' EnumName WhiteSpace '{' WhiteSpace EnumValueList_list '}'
	0,           // EnumDef : 'enum' EnumName WhiteSpace '{' EnumValueList_list '}'
	0,           // EnumDef : 'enum' EnumName '{' WhiteSpace EnumValueList_list '}'
	0,           // EnumDef : 'enum' EnumName '{' EnumValueList_list '}'
	0,           // EnumValueList_list : EnumValueList_list EnumValueList
	0,           // EnumValueList_list : EnumValueList
	0,           // Definition : MessageDef
	0,           // Definition : ServiceDef
	0,           // Definition : EnumDef
	0,           // Definition : Option
	0,           // Definition : error ';'
	0,           // Definition : error '}'
	0,           // DefinitionList : Definition
	0,           // DefinitionList : Definition WhiteSpace
	0,           // DefinitionList_optlist : DefinitionList_optlist DefinitionList
	0,           // DefinitionList_optlist :
	0,           // ServoFile : WhiteSpace DefinitionList_optlist
	0,           // ServoFile : DefinitionList_optlist
}

// set(follow ERROR) = SEMICOLON, RBRACE
var afterErr = []token.Type{
	19, 21,
}
