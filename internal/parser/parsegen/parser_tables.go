// generated by Textmapper; DO NOT EDIT

package parsegen

import (
	"fmt"

	"github.com/egoodhall/servo/internal/parser/parsegen/token"
)

var tmNonterminals = [...]string{
	"Comment",
	"WhiteSpace",
	"WhiteSpace$1",
	"OptionName",
	"OptionString",
	"OptionBool",
	"OptionInt",
	"OptionFloat",
	"OptionValue",
	"Option",
	"TypeRef",
	"FieldName",
	"ScalarType",
	"MapKeyType",
	"MapValueType",
	"MapType",
	"ListElementType",
	"ListType",
	"FieldMod",
	"FieldType",
	"FieldDef",
	"FieldDefList",
	"MessageName",
	"FieldDefList_optlist",
	"MessageDef",
	"RpcName",
	"RpcRequest",
	"RpcResponse",
	"RpcMethod",
	"PubName",
	"PubMessage",
	"PubMethod",
	"Method",
	"MethodList",
	"ServiceName",
	"MethodList_list",
	"ServiceDef",
	"EnumName",
	"EnumValue",
	"EnumField",
	"EnumValueList",
	"EnumDef",
	"EnumValueList_list",
	"Definition",
	"DefinitionList",
	"DefinitionList_optlist",
	"ServoFile",
}

func symbolName(sym int32) string {
	if sym == noToken {
		return "<no-token>"
	}
	if sym < int32(token.NumTokens) {
		return token.Type(sym).String()
	}
	if i := int(sym) - int(token.NumTokens); i < len(tmNonterminals) {
		return tmNonterminals[i]
	}
	return fmt.Sprintf("nonterminal(%d)", sym)
}

var tmAction = []int32{
	-3, 6, 1, 0, 5, 171, -23, -67, -81, 4, 3, -1, -1, -1, -1, -1, 165, 162, 163,
	164, -95, 170, 150, -1, 45, -1, 143, -1, 7, -1, 166, 167, 169, -1, -1, -115,
	-1, -1, -1, -1, 151, -1, -1, -129, 161, -1, -1, 47, -1, -141, -1, -1, -1, -1,
	138, 137, -155, 145, -1, -1, 8, 9, 10, 11, 12, 13, 14, 15, -1, -1, 153, -1,
	155, 159, 160, -1, -1, -1, -1, 19, 51, -1, -171, 46, 47, -1, 139, 140, 52,
	-1, 119, -1, -1, 142, 149, 144, -1, -1, 16, 158, 152, -1, 157, 50, 41, 42,
	-1, -1, 44, -1, 49, -1, -1, -1, -1, 148, -1, 147, 156, 17, 18, -1, -1, 20,
	-185, -197, -209, -1, -1, 48, -1, 53, -1, -1, -1, 120, -1, -1, 146, -221, 24,
	-1, -1, -1, 26, 27, 29, 31, 40, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, 25, 38, -1, 39, -1, 36, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, 136, -1, -1, -1, -1, -1, 22, -1, 37, 34, -1, 35, -1, -1, -1, -1, 54, -1,
	-1, -1, -1, -1, -1, -1, -1, -1, 132, -1, -1, 135, 134, -1, -1, -1, 128, -1,
	-1, 23, 33, -1, -1, -1, -1, -1, -1, 118, -1, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, 131, 130, -1, 133, 124, -1, -1, 127, 126, -1, -1, 102,
	-1, -1, -1, -1, -1, -1, 116, -1, 117, -1, 114, -1, -1, 110, -1, -1, -1, -1,
	-1, -1, -1, -1, -1, 86, -1, -1, -1, -1, -1, -1, 129, 123, 122, -1, 125, 100,
	-1, 101, -1, 98, -1, -1, 94, -1, -1, -1, 115, 112, -1, 113, 108, -1, 109, -1,
	106, -1, -1, 70, -1, -1, -1, -1, -1, -1, 84, -1, 85, -1, 82, -1, -1, 78, -1,
	-1, -1, 121, 99, 96, -1, 97, 92, -1, 93, -1, 90, -1, 111, 107, 104, -1, 105,
	68, -1, 69, -1, 66, -1, -1, 62, -1, -1, -1, 83, 80, -1, 81, 76, -1, 77, -1,
	74, -1, 95, 91, 88, -1, 89, 103, 67, 64, -1, 65, 60, -1, 61, -1, 58, -1, 79,
	75, 72, -1, 73, 87, 63, 59, 56, -1, 57, 71, 55, -1, -2,
}

var tmLalr = []int32{
	6, -1, 7, -1, 8, -1, 0, 171, 2, 171, 3, 171, 4, 171, 5, 171, 9, 171, -1, -2,
	6, -1, 7, -1, 8, -1, 0, 2, 2, 2, 3, 2, 4, 2, 5, 2, 9, 2, 10, 2, 11, 2, 13, 2,
	15, 2, 16, 2, 17, 2, 18, 2, 19, 2, 20, 2, 21, 2, 22, 2, 23, 2, -1, -2, 2, -1,
	3, -1, 4, -1, 5, -1, 9, -1, 0, 173, -1, -2, 2, -1, 3, -1, 4, -1, 5, -1, 9,
	-1, 0, 172, -1, -2, 6, -1, 7, -1, 8, -1, 0, 168, 2, 168, 3, 168, 4, 168, 5,
	168, 9, 168, -1, -2, 6, -1, 7, -1, 8, -1, 9, 47, 10, 47, 23, 47, -1, -2, 6,
	-1, 7, -1, 8, -1, 20, 154, 23, 154, -1, -2, 6, -1, 7, -1, 8, -1, 9, 47, 10,
	47, 23, 47, -1, -2, 6, -1, 7, -1, 8, -1, 9, 141, 16, 141, 17, 141, 23, 141,
	-1, -2, 6, -1, 7, -1, 8, -1, 9, 43, 10, 43, 23, 43, -1, -2, 12, -1, 6, 28, 7,
	28, 8, 28, 21, 28, -1, -2, 12, -1, 6, 30, 7, 30, 8, 30, 21, 30, -1, -2, 12,
	-1, 6, 32, 7, 32, 8, 32, 21, 32, -1, -2, 14, 18, 15, 21, -1, -2,
}

var tmGoto = []int32{
	0, 2, 2, 6, 10, 14, 18, 220, 422, 624, 652, 764, 856, 862, 870, 874, 912,
	928, 944, 952, 984, 1000, 1188, 1200, 1230, 1232, 1234, 1236, 1238, 1240,
	1442, 1642, 1842, 1844, 1846, 1848, 1850, 1852, 1854, 1858, 1950, 1958, 1966,
	1968, 1970, 1978, 1980, 1988, 1994, 2002, 2010, 2018, 2020, 2028, 2032, 2034,
	2042, 2106, 2122, 2124, 2132, 2148, 2164, 2180, 2182, 2190, 2194, 2196, 2212,
	2228, 2244, 2248, 2256, 2260, 2264, 2268, 2270,
}

var tmFromTo = []int16{
	393, 394, 7, 11, 8, 11, 7, 12, 8, 12, 7, 13, 8, 13, 7, 14, 8, 14, 0, 1, 6, 9,
	20, 1, 23, 1, 25, 1, 27, 1, 33, 1, 35, 1, 37, 1, 42, 1, 43, 1, 46, 1, 49, 1,
	56, 1, 59, 1, 81, 1, 82, 1, 89, 1, 91, 1, 106, 1, 111, 1, 113, 1, 127, 1,
	128, 1, 132, 1, 133, 1, 136, 1, 137, 1, 143, 1, 151, 1, 152, 1, 153, 1, 156,
	1, 157, 1, 158, 1, 161, 1, 167, 1, 170, 1, 172, 1, 174, 1, 175, 1, 176, 1,
	178, 1, 182, 1, 183, 1, 184, 1, 192, 1, 194, 1, 197, 1, 198, 1, 199, 1, 201,
	1, 203, 1, 205, 1, 208, 1, 212, 1, 216, 1, 220, 1, 221, 1, 222, 1, 224, 1,
	228, 1, 230, 1, 231, 1, 232, 1, 234, 1, 236, 1, 237, 1, 238, 1, 246, 1, 250,
	1, 254, 1, 256, 1, 257, 1, 261, 1, 264, 1, 268, 1, 270, 1, 271, 1, 272, 1,
	274, 1, 278, 1, 280, 1, 281, 1, 290, 1, 293, 1, 297, 1, 305, 1, 308, 1, 312,
	1, 314, 1, 315, 1, 319, 1, 322, 1, 326, 1, 335, 1, 346, 1, 349, 1, 353, 1,
	361, 1, 377, 1, 0, 2, 6, 2, 20, 2, 23, 2, 25, 2, 27, 2, 33, 2, 35, 2, 37, 2,
	42, 2, 43, 2, 46, 2, 49, 2, 56, 2, 59, 2, 81, 2, 82, 2, 89, 2, 91, 2, 106, 2,
	111, 2, 113, 2, 127, 2, 128, 2, 132, 2, 133, 2, 136, 2, 137, 2, 143, 2, 151,
	2, 152, 2, 153, 2, 156, 2, 157, 2, 158, 2, 161, 2, 167, 2, 170, 2, 172, 2,
	174, 2, 175, 2, 176, 2, 178, 2, 182, 2, 183, 2, 184, 2, 192, 2, 194, 2, 197,
	2, 198, 2, 199, 2, 201, 2, 203, 2, 205, 2, 208, 2, 212, 2, 216, 2, 220, 2,
	221, 2, 222, 2, 224, 2, 228, 2, 230, 2, 231, 2, 232, 2, 234, 2, 236, 2, 237,
	2, 238, 2, 246, 2, 250, 2, 254, 2, 256, 2, 257, 2, 261, 2, 264, 2, 268, 2,
	270, 2, 271, 2, 272, 2, 274, 2, 278, 2, 280, 2, 281, 2, 290, 2, 293, 2, 297,
	2, 305, 2, 308, 2, 312, 2, 314, 2, 315, 2, 319, 2, 322, 2, 326, 2, 335, 2,
	346, 2, 349, 2, 353, 2, 361, 2, 377, 2, 0, 3, 6, 3, 20, 3, 23, 3, 25, 3, 27,
	3, 33, 3, 35, 3, 37, 3, 42, 3, 43, 3, 46, 3, 49, 3, 56, 3, 59, 3, 81, 3, 82,
	3, 89, 3, 91, 3, 106, 3, 111, 3, 113, 3, 127, 3, 128, 3, 132, 3, 133, 3, 136,
	3, 137, 3, 143, 3, 151, 3, 152, 3, 153, 3, 156, 3, 157, 3, 158, 3, 161, 3,
	167, 3, 170, 3, 172, 3, 174, 3, 175, 3, 176, 3, 178, 3, 182, 3, 183, 3, 184,
	3, 192, 3, 194, 3, 197, 3, 198, 3, 199, 3, 201, 3, 203, 3, 205, 3, 208, 3,
	212, 3, 216, 3, 220, 3, 221, 3, 222, 3, 224, 3, 228, 3, 230, 3, 231, 3, 232,
	3, 234, 3, 236, 3, 237, 3, 238, 3, 246, 3, 250, 3, 254, 3, 256, 3, 257, 3,
	261, 3, 264, 3, 268, 3, 270, 3, 271, 3, 272, 3, 274, 3, 278, 3, 280, 3, 281,
	3, 290, 3, 293, 3, 297, 3, 305, 3, 308, 3, 312, 3, 314, 3, 315, 3, 319, 3,
	322, 3, 326, 3, 335, 3, 346, 3, 349, 3, 353, 3, 361, 3, 377, 3, 7, 15, 8, 15,
	37, 50, 48, 78, 53, 50, 58, 50, 59, 50, 77, 78, 85, 78, 92, 50, 96, 50, 97,
	50, 109, 78, 116, 50, 11, 22, 12, 24, 13, 26, 14, 28, 48, 79, 51, 88, 52, 90,
	77, 79, 85, 79, 106, 119, 109, 79, 111, 119, 113, 119, 121, 119, 122, 119,
	128, 119, 130, 119, 133, 119, 134, 119, 137, 119, 150, 119, 155, 119, 160,
	119, 162, 119, 172, 119, 192, 119, 195, 119, 198, 119, 199, 119, 203, 119,
	219, 119, 221, 119, 222, 119, 227, 119, 229, 119, 231, 119, 232, 119, 235,
	119, 237, 119, 238, 119, 253, 119, 255, 119, 257, 119, 267, 119, 269, 119,
	271, 119, 272, 119, 277, 119, 279, 119, 281, 119, 296, 119, 311, 119, 313,
	119, 315, 119, 325, 119, 352, 119, 106, 120, 111, 120, 113, 120, 121, 139,
	122, 120, 128, 120, 130, 120, 133, 120, 134, 120, 137, 120, 150, 120, 155,
	120, 160, 120, 162, 120, 172, 120, 192, 120, 195, 120, 198, 120, 199, 120,
	203, 120, 219, 120, 221, 120, 222, 120, 227, 120, 229, 120, 231, 120, 232,
	120, 235, 120, 237, 120, 238, 120, 253, 120, 255, 120, 257, 120, 267, 120,
	269, 120, 271, 120, 272, 120, 277, 120, 279, 120, 281, 120, 296, 120, 311,
	120, 313, 120, 315, 120, 325, 120, 352, 120, 124, 144, 125, 144, 126, 144,
	106, 121, 122, 121, 128, 121, 150, 121, 142, 163, 187, 217, 81, 106, 107,
	128, 141, 162, 153, 172, 170, 192, 173, 198, 174, 199, 176, 203, 193, 221,
	194, 222, 200, 231, 201, 232, 204, 237, 205, 238, 223, 257, 233, 271, 234,
	272, 239, 281, 273, 315, 37, 51, 53, 51, 58, 51, 59, 51, 92, 51, 96, 51, 97,
	51, 116, 51, 37, 52, 53, 52, 58, 52, 59, 52, 92, 52, 96, 52, 97, 52, 116, 52,
	89, 111, 91, 113, 112, 133, 114, 137, 132, 153, 136, 158, 152, 170, 154, 174,
	156, 176, 157, 178, 159, 182, 161, 184, 171, 194, 175, 201, 177, 205, 179,
	208, 183, 212, 185, 216, 202, 234, 213, 246, 33, 40, 41, 40, 45, 40, 46, 40,
	69, 40, 75, 40, 76, 40, 101, 40, 15, 30, 42, 70, 50, 86, 68, 98, 71, 100, 78,
	104, 127, 148, 143, 164, 149, 166, 151, 168, 158, 180, 165, 188, 167, 189,
	169, 191, 178, 206, 181, 209, 182, 210, 184, 214, 190, 218, 197, 225, 207,
	240, 208, 241, 211, 243, 212, 244, 215, 247, 216, 248, 220, 251, 224, 258,
	226, 260, 228, 262, 230, 265, 236, 275, 242, 282, 245, 283, 246, 284, 249,
	286, 250, 287, 252, 289, 254, 291, 256, 294, 259, 298, 261, 299, 263, 301,
	264, 302, 266, 304, 268, 306, 270, 309, 274, 316, 276, 318, 278, 320, 280,
	323, 285, 327, 288, 328, 290, 329, 292, 331, 293, 332, 295, 334, 297, 336,
	300, 338, 303, 339, 305, 340, 307, 342, 308, 343, 310, 345, 312, 347, 314,
	350, 317, 354, 319, 355, 321, 357, 322, 358, 324, 360, 326, 362, 330, 364,
	333, 365, 335, 366, 337, 368, 341, 369, 344, 370, 346, 371, 348, 373, 349,
	374, 351, 376, 353, 378, 356, 380, 359, 381, 361, 382, 363, 384, 367, 385,
	372, 386, 375, 387, 377, 388, 379, 390, 383, 391, 389, 392, 23, 33, 25, 35,
	27, 37, 34, 46, 36, 49, 38, 59, 15, 31, 45, 73, 48, 80, 50, 87, 58, 94, 69,
	99, 76, 102, 77, 103, 78, 105, 85, 110, 92, 115, 97, 117, 101, 118, 109, 129,
	116, 138, 29, 39, 39, 60, 39, 61, 39, 62, 39, 63, 0, 4, 6, 10, 20, 4, 23, 4,
	25, 4, 27, 4, 33, 4, 35, 4, 37, 4, 42, 4, 43, 4, 46, 4, 49, 4, 56, 4, 59, 4,
	81, 4, 82, 4, 89, 4, 91, 4, 106, 4, 111, 4, 113, 4, 127, 4, 128, 4, 132, 4,
	133, 4, 136, 4, 137, 4, 143, 4, 151, 4, 152, 4, 153, 4, 156, 4, 157, 4, 158,
	4, 161, 4, 167, 4, 170, 4, 172, 4, 174, 4, 175, 4, 176, 4, 178, 4, 182, 4,
	183, 4, 184, 4, 192, 4, 194, 4, 197, 4, 198, 4, 199, 4, 201, 4, 203, 4, 205,
	4, 208, 4, 212, 4, 216, 4, 220, 4, 221, 4, 222, 4, 224, 4, 228, 4, 230, 4,
	231, 4, 232, 4, 234, 4, 236, 4, 237, 4, 238, 4, 246, 4, 250, 4, 254, 4, 256,
	4, 257, 4, 261, 4, 264, 4, 268, 4, 270, 4, 271, 4, 272, 4, 274, 4, 278, 4,
	280, 4, 281, 4, 290, 4, 293, 4, 297, 4, 305, 4, 308, 4, 312, 4, 314, 4, 315,
	4, 319, 4, 322, 4, 326, 4, 335, 4, 346, 4, 349, 4, 353, 4, 361, 4, 377, 4, 0,
	5, 20, 32, 23, 34, 25, 36, 27, 38, 33, 41, 35, 47, 37, 53, 42, 71, 43, 72,
	46, 75, 49, 84, 56, 93, 59, 96, 81, 107, 82, 108, 89, 112, 91, 114, 106, 122,
	111, 130, 113, 134, 127, 149, 128, 150, 132, 154, 133, 155, 136, 159, 137,
	160, 143, 165, 151, 169, 152, 171, 153, 173, 156, 177, 157, 179, 158, 181,
	161, 185, 167, 190, 170, 193, 172, 195, 174, 200, 175, 202, 176, 204, 178,
	207, 182, 211, 183, 213, 184, 215, 192, 219, 194, 223, 197, 226, 198, 227,
	199, 229, 201, 233, 203, 235, 205, 239, 208, 242, 212, 245, 216, 249, 220,
	252, 221, 253, 222, 255, 224, 259, 228, 263, 230, 266, 231, 267, 232, 269,
	234, 273, 236, 276, 237, 277, 238, 279, 246, 285, 250, 288, 254, 292, 256,
	295, 257, 296, 261, 300, 264, 303, 268, 307, 270, 310, 271, 311, 272, 313,
	274, 317, 278, 321, 280, 324, 281, 325, 290, 330, 293, 333, 297, 337, 305,
	341, 308, 344, 312, 348, 314, 351, 315, 352, 319, 356, 322, 359, 326, 363,
	335, 367, 346, 372, 349, 375, 353, 379, 361, 383, 377, 389, 0, 6, 20, 6, 23,
	6, 25, 6, 27, 6, 33, 6, 35, 6, 37, 6, 42, 6, 43, 6, 46, 6, 49, 6, 56, 6, 59,
	6, 81, 6, 82, 6, 89, 6, 91, 6, 106, 6, 111, 6, 113, 6, 127, 6, 128, 6, 132,
	6, 133, 6, 136, 6, 137, 6, 143, 6, 151, 6, 152, 6, 153, 6, 156, 6, 157, 6,
	158, 6, 161, 6, 167, 6, 170, 6, 172, 6, 174, 6, 175, 6, 176, 6, 178, 6, 182,
	6, 183, 6, 184, 6, 192, 6, 194, 6, 197, 6, 198, 6, 199, 6, 201, 6, 203, 6,
	205, 6, 208, 6, 212, 6, 216, 6, 220, 6, 221, 6, 222, 6, 224, 6, 228, 6, 230,
	6, 231, 6, 232, 6, 234, 6, 236, 6, 237, 6, 238, 6, 246, 6, 250, 6, 254, 6,
	256, 6, 257, 6, 261, 6, 264, 6, 268, 6, 270, 6, 271, 6, 272, 6, 274, 6, 278,
	6, 280, 6, 281, 6, 290, 6, 293, 6, 297, 6, 305, 6, 308, 6, 312, 6, 314, 6,
	315, 6, 319, 6, 322, 6, 326, 6, 335, 6, 346, 6, 349, 6, 353, 6, 361, 6, 377,
	6, 14, 29, 39, 64, 39, 65, 39, 66, 39, 67, 39, 68, 7, 16, 8, 16, 106, 123,
	111, 131, 113, 135, 121, 140, 122, 123, 128, 123, 130, 131, 133, 131, 134,
	135, 137, 135, 150, 123, 155, 131, 160, 135, 162, 186, 172, 196, 192, 196,
	195, 196, 198, 196, 199, 196, 203, 196, 219, 196, 221, 196, 222, 196, 227,
	196, 229, 196, 231, 196, 232, 196, 235, 196, 237, 196, 238, 196, 253, 196,
	255, 196, 257, 196, 267, 196, 269, 196, 271, 196, 272, 196, 277, 196, 279,
	196, 281, 196, 296, 196, 311, 196, 313, 196, 315, 196, 325, 196, 352, 196,
	48, 81, 77, 81, 85, 81, 109, 81, 106, 124, 122, 124, 128, 124, 150, 124, 121,
	141, 162, 187, 106, 125, 122, 125, 128, 125, 150, 125, 121, 142, 106, 126,
	122, 126, 128, 126, 150, 126, 124, 145, 125, 146, 126, 147, 106, 127, 122,
	143, 128, 151, 150, 167, 48, 82, 77, 82, 85, 82, 109, 82, 48, 83, 77, 83, 85,
	83, 109, 83, 12, 25, 35, 48, 47, 77, 49, 85, 84, 109, 7, 17, 8, 17, 51, 89,
	111, 132, 130, 152, 133, 156, 155, 175, 172, 197, 192, 220, 195, 224, 198,
	228, 199, 230, 203, 236, 219, 250, 221, 254, 222, 256, 227, 261, 229, 264,
	231, 268, 232, 270, 235, 274, 237, 278, 238, 280, 253, 290, 255, 293, 257,
	297, 267, 305, 269, 308, 271, 312, 272, 314, 277, 319, 279, 322, 281, 326,
	296, 335, 311, 346, 313, 349, 315, 353, 325, 361, 352, 377, 37, 54, 53, 54,
	58, 54, 59, 54, 92, 54, 96, 54, 97, 54, 116, 54, 52, 91, 113, 136, 134, 157,
	137, 161, 160, 183, 37, 55, 53, 55, 58, 55, 59, 55, 92, 55, 96, 55, 97, 55,
	116, 55, 37, 56, 53, 56, 58, 56, 59, 56, 92, 56, 96, 56, 97, 56, 116, 56, 37,
	57, 53, 57, 58, 95, 59, 57, 92, 95, 96, 57, 97, 95, 116, 95, 13, 27, 37, 58,
	53, 92, 59, 97, 96, 116, 7, 18, 8, 18, 11, 23, 33, 42, 41, 42, 45, 42, 46,
	42, 69, 42, 75, 42, 76, 42, 101, 42, 33, 43, 41, 43, 45, 43, 46, 43, 69, 43,
	75, 43, 76, 43, 101, 43, 33, 44, 41, 44, 45, 74, 46, 44, 69, 74, 75, 44, 76,
	74, 101, 74, 7, 19, 8, 19, 33, 45, 41, 69, 46, 76, 75, 101, 7, 20, 8, 20, 7,
	21, 8, 21, 0, 7, 5, 8, 0, 393,
}

var tmRuleLen = []int8{
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 1, 1, 1, 1, 1, 1, 5, 1, 3,
	1, 2, 1, 2, 1, 2, 1, 7, 6, 6, 5, 6, 5, 5, 4, 2, 2, 1, 2, 1, 2, 0, 7, 6, 6, 5,
	1, 1, 1, 14, 13, 13, 12, 13, 12, 12, 11, 13, 12, 12, 11, 12, 11, 11, 10, 13,
	12, 12, 11, 12, 11, 11, 10, 12, 11, 11, 10, 11, 10, 10, 9, 13, 12, 12, 11,
	12, 11, 11, 10, 12, 11, 11, 10, 11, 10, 10, 9, 12, 11, 11, 10, 11, 10, 10, 9,
	11, 10, 10, 9, 10, 9, 9, 8, 1, 1, 10, 9, 9, 8, 9, 8, 8, 7, 9, 8, 8, 7, 8, 7,
	7, 6, 1, 1, 2, 2, 1, 2, 1, 2, 1, 7, 6, 6, 5, 1, 1, 3, 2, 1, 2, 7, 6, 6, 5, 2,
	1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 0, 2, 1,
}

var tmRuleSymbol = []int32{
	29, 29, 30, 31, 31, 31, 31, 32, 33, 34, 35, 36, 37, 37, 37, 37, 38, 39, 39,
	40, 41, 42, 43, 44, 45, 46, 47, 48, 48, 48, 48, 48, 48, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 50, 50, 51, 52, 52, 53, 53, 53, 53, 54, 55, 56, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 58, 59, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 61, 61, 61, 61, 62, 62, 63, 64, 64, 65, 65, 65, 65, 66, 67,
	68, 68, 69, 69, 70, 70, 70, 70, 71, 71, 72, 72, 72, 72, 72, 72, 73, 73, 74,
	74, 75, 75,
}

var tmRuleType = [...]NodeType{
	0,            // Comment : BlockComment
	0,            // Comment : EolComment
	0,            // WhiteSpace : WhiteSpace$1
	0,            // WhiteSpace$1 : WhiteSpace$1 Comment
	0,            // WhiteSpace$1 : WhiteSpace$1 WS
	0,            // WhiteSpace$1 : Comment
	0,            // WhiteSpace$1 : WS
	OptionName,   // OptionName : Name
	OptionString, // OptionString : StringLiteral
	OptionBool,   // OptionBool : BoolLiteral
	OptionInt,    // OptionInt : IntLiteral
	OptionFloat,  // OptionFloat : FloatLiteral
	0,            // OptionValue : OptionString
	0,            // OptionValue : OptionBool
	0,            // OptionValue : OptionInt
	0,            // OptionValue : OptionFloat
	0,            // Option : 'option' OptionName '=' OptionValue ';'
	0,            // TypeRef : Name
	0,            // TypeRef : Primitive
	FieldName,    // FieldName : Name
	ScalarType,   // ScalarType : TypeRef
	MapKeyType,   // MapKeyType : Primitive
	MapValueType, // MapValueType : TypeRef
	0,            // MapType : '[' MapKeyType ':' MapValueType ']'
	ListElement,  // ListElementType : TypeRef
	0,            // ListType : '[' ListElementType ']'
	FieldMod,     // FieldMod : Modifier
	0,            // FieldType : ScalarType FieldMod
	0,            // FieldType : ScalarType
	0,            // FieldType : MapType FieldMod
	0,            // FieldType : MapType
	0,            // FieldType : ListType FieldMod
	0,            // FieldType : ListType
	0,            // FieldDef : FieldName WhiteSpace ':' WhiteSpace FieldType WhiteSpace ';'
	0,            // FieldDef : FieldName WhiteSpace ':' WhiteSpace FieldType ';'
	0,            // FieldDef : FieldName WhiteSpace ':' FieldType WhiteSpace ';'
	0,            // FieldDef : FieldName WhiteSpace ':' FieldType ';'
	0,            // FieldDef : FieldName ':' WhiteSpace FieldType WhiteSpace ';'
	0,            // FieldDef : FieldName ':' WhiteSpace FieldType ';'
	0,            // FieldDef : FieldName ':' FieldType WhiteSpace ';'
	0,            // FieldDef : FieldName ':' FieldType ';'
	0,            // FieldDef : error ';'
	0,            // FieldDef : error '}'
	0,            // FieldDefList : FieldDef
	0,            // FieldDefList : FieldDef WhiteSpace
	MessageName,  // MessageName : Name
	0,            // FieldDefList_optlist : FieldDefList_optlist FieldDefList
	0,            // FieldDefList_optlist :
	0,            // MessageDef : 'message' MessageName WhiteSpace '{' WhiteSpace FieldDefList_optlist '}'
	0,            // MessageDef : 'message' MessageName WhiteSpace '{' FieldDefList_optlist '}'
	0,            // MessageDef : 'message' MessageName '{' WhiteSpace FieldDefList_optlist '}'
	0,            // MessageDef : 'message' MessageName '{' FieldDefList_optlist '}'
	RpcName,      // RpcName : Name
	RpcRequest,   // RpcRequest : TypeRef
	RpcResponse,  // RpcResponse : TypeRef
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest WhiteSpace ')' WhiteSpace ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest WhiteSpace ')' WhiteSpace ':' WhiteSpace RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest WhiteSpace ')' WhiteSpace ':' RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest WhiteSpace ')' WhiteSpace ':' RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest WhiteSpace ')' ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest WhiteSpace ')' ':' WhiteSpace RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest WhiteSpace ')' ':' RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest WhiteSpace ')' ':' RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest ')' WhiteSpace ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest ')' WhiteSpace ':' WhiteSpace RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest ')' WhiteSpace ':' RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest ')' WhiteSpace ':' RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest ')' ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest ')' ':' WhiteSpace RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest ')' ':' RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest ')' ':' RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest WhiteSpace ')' WhiteSpace ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest WhiteSpace ')' WhiteSpace ':' WhiteSpace RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest WhiteSpace ')' WhiteSpace ':' RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest WhiteSpace ')' WhiteSpace ':' RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest WhiteSpace ')' ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest WhiteSpace ')' ':' WhiteSpace RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest WhiteSpace ')' ':' RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest WhiteSpace ')' ':' RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest ')' WhiteSpace ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest ')' WhiteSpace ':' WhiteSpace RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest ')' WhiteSpace ':' RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest ')' WhiteSpace ':' RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest ')' ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest ')' ':' WhiteSpace RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest ')' ':' RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName WhiteSpace '(' RpcRequest ')' ':' RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest WhiteSpace ')' WhiteSpace ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest WhiteSpace ')' WhiteSpace ':' WhiteSpace RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest WhiteSpace ')' WhiteSpace ':' RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest WhiteSpace ')' WhiteSpace ':' RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest WhiteSpace ')' ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest WhiteSpace ')' ':' WhiteSpace RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest WhiteSpace ')' ':' RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest WhiteSpace ')' ':' RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest ')' WhiteSpace ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest ')' WhiteSpace ':' WhiteSpace RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest ')' WhiteSpace ':' RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest ')' WhiteSpace ':' RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest ')' ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest ')' ':' WhiteSpace RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest ')' ':' RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName '(' WhiteSpace RpcRequest ')' ':' RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName '(' RpcRequest WhiteSpace ')' WhiteSpace ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName '(' RpcRequest WhiteSpace ')' WhiteSpace ':' WhiteSpace RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName '(' RpcRequest WhiteSpace ')' WhiteSpace ':' RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName '(' RpcRequest WhiteSpace ')' WhiteSpace ':' RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName '(' RpcRequest WhiteSpace ')' ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName '(' RpcRequest WhiteSpace ')' ':' WhiteSpace RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName '(' RpcRequest WhiteSpace ')' ':' RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName '(' RpcRequest WhiteSpace ')' ':' RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName '(' RpcRequest ')' WhiteSpace ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName '(' RpcRequest ')' WhiteSpace ':' WhiteSpace RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName '(' RpcRequest ')' WhiteSpace ':' RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName '(' RpcRequest ')' WhiteSpace ':' RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName '(' RpcRequest ')' ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName '(' RpcRequest ')' ':' WhiteSpace RpcResponse ';'
	0,            // RpcMethod : 'rpc' RpcName '(' RpcRequest ')' ':' RpcResponse WhiteSpace ';'
	0,            // RpcMethod : 'rpc' RpcName '(' RpcRequest ')' ':' RpcResponse ';'
	PubName,      // PubName : Name
	PubMessage,   // PubMessage : TypeRef
	0,            // PubMethod : 'pub' PubName WhiteSpace '(' WhiteSpace PubMessage WhiteSpace ')' WhiteSpace ';'
	0,            // PubMethod : 'pub' PubName WhiteSpace '(' WhiteSpace PubMessage WhiteSpace ')' ';'
	0,            // PubMethod : 'pub' PubName WhiteSpace '(' WhiteSpace PubMessage ')' WhiteSpace ';'
	0,            // PubMethod : 'pub' PubName WhiteSpace '(' WhiteSpace PubMessage ')' ';'
	0,            // PubMethod : 'pub' PubName WhiteSpace '(' PubMessage WhiteSpace ')' WhiteSpace ';'
	0,            // PubMethod : 'pub' PubName WhiteSpace '(' PubMessage WhiteSpace ')' ';'
	0,            // PubMethod : 'pub' PubName WhiteSpace '(' PubMessage ')' WhiteSpace ';'
	0,            // PubMethod : 'pub' PubName WhiteSpace '(' PubMessage ')' ';'
	0,            // PubMethod : 'pub' PubName '(' WhiteSpace PubMessage WhiteSpace ')' WhiteSpace ';'
	0,            // PubMethod : 'pub' PubName '(' WhiteSpace PubMessage WhiteSpace ')' ';'
	0,            // PubMethod : 'pub' PubName '(' WhiteSpace PubMessage ')' WhiteSpace ';'
	0,            // PubMethod : 'pub' PubName '(' WhiteSpace PubMessage ')' ';'
	0,            // PubMethod : 'pub' PubName '(' PubMessage WhiteSpace ')' WhiteSpace ';'
	0,            // PubMethod : 'pub' PubName '(' PubMessage WhiteSpace ')' ';'
	0,            // PubMethod : 'pub' PubName '(' PubMessage ')' WhiteSpace ';'
	0,            // PubMethod : 'pub' PubName '(' PubMessage ')' ';'
	0,            // Method : PubMethod
	0,            // Method : RpcMethod
	0,            // Method : error ';'
	0,            // Method : error '}'
	0,            // MethodList : Method
	0,            // MethodList : Method WhiteSpace
	ServiceName,  // ServiceName : Name
	0,            // MethodList_list : MethodList_list MethodList
	0,            // MethodList_list : MethodList
	0,            // ServiceDef : 'service' ServiceName WhiteSpace '{' WhiteSpace MethodList_list '}'
	0,            // ServiceDef : 'service' ServiceName WhiteSpace '{' MethodList_list '}'
	0,            // ServiceDef : 'service' ServiceName '{' WhiteSpace MethodList_list '}'
	0,            // ServiceDef : 'service' ServiceName '{' MethodList_list '}'
	EnumName,     // EnumName : Name
	EnumValue,    // EnumValue : Value
	0,            // EnumField : EnumValue WhiteSpace ';'
	0,            // EnumField : EnumValue ';'
	0,            // EnumValueList : EnumField
	0,            // EnumValueList : EnumField WhiteSpace
	0,            // EnumDef : 'enum' EnumName WhiteSpace '{' WhiteSpace EnumValueList_list '}'
	0,            // EnumDef : 'enum' EnumName WhiteSpace '{' EnumValueList_list '}'
	0,            // EnumDef : 'enum' EnumName '{' WhiteSpace EnumValueList_list '}'
	0,            // EnumDef : 'enum' EnumName '{' EnumValueList_list '}'
	0,            // EnumValueList_list : EnumValueList_list EnumValueList
	0,            // EnumValueList_list : EnumValueList
	0,            // Definition : MessageDef
	0,            // Definition : ServiceDef
	0,            // Definition : EnumDef
	0,            // Definition : Option
	0,            // Definition : error ';'
	0,            // Definition : error '}'
	0,            // DefinitionList : Definition
	0,            // DefinitionList : Definition WhiteSpace
	0,            // DefinitionList_optlist : DefinitionList_optlist DefinitionList
	0,            // DefinitionList_optlist :
	0,            // ServoFile : WhiteSpace DefinitionList_optlist
	0,            // ServoFile : DefinitionList_optlist
}

// set(follow ERROR) = SEMICOLON, RBRACE
var afterErr = []token.Type{
	21, 23,
}
