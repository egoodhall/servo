// generated by Textmapper; DO NOT EDIT

package parsegen

import (
	"fmt"

	"github.com/egoodhall/servo/internal/parser/parsegen/token"
)

var tmNonterminals = [...]string{
	"Comment",
	"WhiteSpace",
	"WhiteSpace$1",
	"OptionName",
	"OptionString",
	"OptionBool",
	"OptionInt",
	"OptionFloat",
	"OptionValue",
	"Option",
	"TypeRef",
	"FieldName",
	"ScalarType",
	"MapKeyType",
	"MapValueType",
	"MapType",
	"ListElementType",
	"ListType",
	"FieldMod",
	"FieldType",
	"FieldDef",
	"FieldDefList",
	"MessageName",
	"FieldDefList_optlist",
	"MessageDef",
	"UnionMemberName",
	"UnionMemberType",
	"UnionMember",
	"UnionMemberList",
	"UnionName",
	"UnionDef",
	"UnionMemberList_optlist",
	"RpcName",
	"RpcRequest",
	"RpcResponse",
	"Method",
	"MethodList",
	"ServiceName",
	"MethodList_list",
	"ServiceDef",
	"EnumName",
	"EnumValue",
	"EnumField",
	"EnumValueList",
	"EnumDef",
	"EnumValueList_list",
	"Definition",
	"DefinitionList",
	"DefinitionList_optlist",
	"ServoFile",
}

func symbolName(sym int32) string {
	if sym == noToken {
		return "<no-token>"
	}
	if sym < int32(token.NumTokens) {
		return token.Type(sym).String()
	}
	if i := int(sym) - int(token.NumTokens); i < len(tmNonterminals) {
		return tmNonterminals[i]
	}
	return fmt.Sprintf("nonterminal(%d)", sym)
}

var tmAction = []int32{
	-3, 6, 1, 0, 5, 187, -25, -69, -85, 4, 3, -1, -1, -1, -1, -1, -1, 181, 177,
	178, 179, 180, -101, 186, 165, -1, 45, -1, 66, -1, 158, -1, 7, -1, 182, 183,
	185, -1, -1, -123, -1, -137, -1, -1, -1, -1, 166, -1, -1, -151, 176, -1, -1,
	47, -1, -163, 72, -1, -177, -1, -1, -191, 160, -1, -1, 8, 9, 10, 11, 12, 13,
	14, 15, -1, -1, 168, -1, 170, 174, 175, -1, -1, -1, -1, 19, 51, -1, -203, 46,
	47, -1, -1, -1, 52, 70, -1, -217, 71, 72, -1, 73, -1, -1, 157, 164, 159, -1,
	-1, 16, 173, 167, -1, 172, 50, 41, 42, -1, -1, 44, -1, 49, 69, 62, 63, -1,
	-1, 65, -1, 68, -1, -1, 163, -1, 162, 171, 17, 18, -1, -1, 20, -231, -243,
	-255, -1, -1, 48, -1, 53, -1, -1, 67, -1, 74, -1, -1, 161, -267, 24, -1, -1,
	-1, 26, 27, 29, 31, 40, -1, -1, -1, -1, 61, -1, -1, -1, -1, -1, -1, -1, -1,
	-1, 25, 38, -1, 39, -1, 36, -1, 59, -1, 60, -1, 57, -1, -1, -1, -1, 155, -1,
	-1, -1, -1, -1, 22, -1, 37, 34, -1, 35, 58, 55, -1, 56, -1, 135, -1, -1, -1,
	75, -1, -1, 154, -1, 145, -1, -1, -1, -1, 115, -1, -1, 23, 33, 54, -1, -1,
	-1, 134, -1, 125, -1, -1, 153, -1, -1, -1, -1, -1, -1, 144, -1, 95, -1, -1,
	-1, -1, -1, 114, -1, 105, -1, -1, 133, -1, -1, -1, -1, -1, -1, 124, 151, -1,
	152, -1, 149, -1, -1, 143, -1, -1, -1, -1, -1, -1, 94, -1, 85, -1, -1, 113,
	-1, -1, -1, -1, -1, -1, 104, 131, -1, 132, -1, 129, -1, -1, 123, -1, -1, -1,
	150, 147, -1, 148, 141, -1, 142, -1, 139, -1, -1, 93, -1, -1, -1, -1, -1, -1,
	84, 111, -1, 112, -1, 109, -1, -1, 103, -1, -1, -1, 130, 127, -1, 128, 121,
	-1, 122, -1, 119, -1, 146, 140, 137, -1, 138, 91, -1, 92, -1, 89, -1, -1, 83,
	-1, -1, -1, 110, 107, -1, 108, 101, -1, 102, -1, 99, -1, 126, 120, 117, -1,
	118, 136, 90, 87, -1, 88, 81, -1, 82, -1, 79, -1, 106, 100, 97, -1, 98, 116,
	86, 80, 77, -1, 78, 96, 76, -1, -2,
}

var tmLalr = []int32{
	7, -1, 8, -1, 9, -1, 0, 187, 2, 187, 3, 187, 4, 187, 5, 187, 6, 187, 10, 187,
	-1, -2, 7, -1, 8, -1, 9, -1, 0, 2, 2, 2, 3, 2, 4, 2, 5, 2, 6, 2, 10, 2, 11,
	2, 12, 2, 14, 2, 16, 2, 17, 2, 18, 2, 19, 2, 20, 2, 21, 2, 22, 2, 23, 2, -1,
	-2, 2, -1, 3, -1, 4, -1, 5, -1, 6, -1, 10, -1, 0, 189, -1, -2, 2, -1, 3, -1,
	4, -1, 5, -1, 6, -1, 10, -1, 0, 188, -1, -2, 7, -1, 8, -1, 9, -1, 0, 184, 2,
	184, 3, 184, 4, 184, 5, 184, 6, 184, 10, 184, -1, -2, 7, -1, 8, -1, 9, -1,
	10, 47, 11, 47, 23, 47, -1, -2, 7, -1, 8, -1, 9, -1, 10, 72, 11, 72, 23, 72,
	-1, -2, 7, -1, 8, -1, 9, -1, 20, 169, 23, 169, -1, -2, 7, -1, 8, -1, 9, -1,
	10, 47, 11, 47, 23, 47, -1, -2, 7, -1, 8, -1, 9, -1, 10, 72, 11, 72, 23, 72,
	-1, -2, 7, -1, 8, -1, 9, -1, 17, 156, 23, 156, -1, -2, 7, -1, 8, -1, 9, -1,
	10, 43, 11, 43, 23, 43, -1, -2, 7, -1, 8, -1, 9, -1, 10, 64, 11, 64, 23, 64,
	-1, -2, 13, -1, 7, 28, 8, 28, 9, 28, 21, 28, -1, -2, 13, -1, 7, 30, 8, 30, 9,
	30, 21, 30, -1, -2, 13, -1, 7, 32, 8, 32, 9, 32, 21, 32, -1, -2, 15, 18, 16,
	21, -1, -2,
}

var tmGoto = []int32{
	0, 2, 2, 6, 10, 14, 18, 22, 216, 410, 604, 624, 744, 836, 842, 850, 854, 896,
	912, 916, 932, 948, 1152, 1168, 1206, 1208, 1210, 1212, 1214, 1216, 1410,
	1602, 1794, 1796, 1798, 1800, 1802, 1804, 1806, 1810, 1902, 1910, 1918, 1920,
	1922, 1930, 1932, 1940, 1946, 1954, 1962, 1970, 1972, 1980, 1984, 1992, 2000,
	2008, 2016, 2018, 2022, 2030, 2032, 2040, 2104, 2120, 2136, 2138, 2146, 2150,
	2152, 2168, 2184, 2200, 2204, 2212, 2216, 2220, 2224, 2226,
}

var tmFromTo = []int16{
	402, 403, 7, 11, 8, 11, 7, 12, 8, 12, 7, 13, 8, 13, 7, 14, 8, 14, 7, 15, 8,
	15, 0, 1, 6, 9, 22, 1, 25, 1, 27, 1, 29, 1, 31, 1, 37, 1, 39, 1, 41, 1, 43,
	1, 48, 1, 49, 1, 52, 1, 55, 1, 58, 1, 61, 1, 64, 1, 86, 1, 87, 1, 95, 1, 96,
	1, 101, 1, 116, 1, 124, 1, 129, 1, 143, 1, 144, 1, 148, 1, 149, 1, 153, 1,
	154, 1, 160, 1, 168, 1, 169, 1, 173, 1, 174, 1, 175, 1, 178, 1, 184, 1, 190,
	1, 193, 1, 195, 1, 198, 1, 199, 1, 200, 1, 212, 1, 215, 1, 218, 1, 219, 1,
	221, 1, 224, 1, 226, 1, 229, 1, 234, 1, 235, 1, 237, 1, 240, 1, 244, 1, 246,
	1, 247, 1, 249, 1, 252, 1, 254, 1, 255, 1, 257, 1, 260, 1, 264, 1, 266, 1,
	267, 1, 272, 1, 275, 1, 279, 1, 281, 1, 282, 1, 284, 1, 287, 1, 291, 1, 293,
	1, 294, 1, 299, 1, 302, 1, 306, 1, 314, 1, 317, 1, 321, 1, 323, 1, 324, 1,
	329, 1, 332, 1, 336, 1, 344, 1, 355, 1, 358, 1, 362, 1, 370, 1, 386, 1, 0, 2,
	6, 2, 22, 2, 25, 2, 27, 2, 29, 2, 31, 2, 37, 2, 39, 2, 41, 2, 43, 2, 48, 2,
	49, 2, 52, 2, 55, 2, 58, 2, 61, 2, 64, 2, 86, 2, 87, 2, 95, 2, 96, 2, 101, 2,
	116, 2, 124, 2, 129, 2, 143, 2, 144, 2, 148, 2, 149, 2, 153, 2, 154, 2, 160,
	2, 168, 2, 169, 2, 173, 2, 174, 2, 175, 2, 178, 2, 184, 2, 190, 2, 193, 2,
	195, 2, 198, 2, 199, 2, 200, 2, 212, 2, 215, 2, 218, 2, 219, 2, 221, 2, 224,
	2, 226, 2, 229, 2, 234, 2, 235, 2, 237, 2, 240, 2, 244, 2, 246, 2, 247, 2,
	249, 2, 252, 2, 254, 2, 255, 2, 257, 2, 260, 2, 264, 2, 266, 2, 267, 2, 272,
	2, 275, 2, 279, 2, 281, 2, 282, 2, 284, 2, 287, 2, 291, 2, 293, 2, 294, 2,
	299, 2, 302, 2, 306, 2, 314, 2, 317, 2, 321, 2, 323, 2, 324, 2, 329, 2, 332,
	2, 336, 2, 344, 2, 355, 2, 358, 2, 362, 2, 370, 2, 386, 2, 0, 3, 6, 3, 22, 3,
	25, 3, 27, 3, 29, 3, 31, 3, 37, 3, 39, 3, 41, 3, 43, 3, 48, 3, 49, 3, 52, 3,
	55, 3, 58, 3, 61, 3, 64, 3, 86, 3, 87, 3, 95, 3, 96, 3, 101, 3, 116, 3, 124,
	3, 129, 3, 143, 3, 144, 3, 148, 3, 149, 3, 153, 3, 154, 3, 160, 3, 168, 3,
	169, 3, 173, 3, 174, 3, 175, 3, 178, 3, 184, 3, 190, 3, 193, 3, 195, 3, 198,
	3, 199, 3, 200, 3, 212, 3, 215, 3, 218, 3, 219, 3, 221, 3, 224, 3, 226, 3,
	229, 3, 234, 3, 235, 3, 237, 3, 240, 3, 244, 3, 246, 3, 247, 3, 249, 3, 252,
	3, 254, 3, 255, 3, 257, 3, 260, 3, 264, 3, 266, 3, 267, 3, 272, 3, 275, 3,
	279, 3, 281, 3, 282, 3, 284, 3, 287, 3, 291, 3, 293, 3, 294, 3, 299, 3, 302,
	3, 306, 3, 314, 3, 317, 3, 321, 3, 323, 3, 324, 3, 329, 3, 332, 3, 336, 3,
	344, 3, 355, 3, 358, 3, 362, 3, 370, 3, 386, 3, 7, 16, 8, 16, 54, 83, 57, 92,
	82, 83, 90, 83, 91, 92, 99, 92, 119, 83, 127, 92, 11, 24, 12, 26, 13, 28, 14,
	30, 15, 32, 54, 84, 57, 93, 59, 100, 82, 84, 90, 84, 91, 93, 99, 93, 116,
	135, 119, 84, 124, 135, 127, 93, 129, 135, 137, 135, 138, 135, 144, 135, 146,
	135, 149, 135, 151, 135, 154, 135, 167, 135, 172, 135, 177, 135, 179, 135,
	195, 135, 212, 135, 216, 135, 219, 135, 221, 135, 226, 135, 233, 135, 235,
	135, 237, 135, 243, 135, 245, 135, 247, 135, 249, 135, 253, 135, 255, 135,
	257, 135, 263, 135, 265, 135, 267, 135, 278, 135, 280, 135, 282, 135, 284,
	135, 290, 135, 292, 135, 294, 135, 305, 135, 320, 135, 322, 135, 324, 135,
	335, 135, 361, 135, 116, 136, 124, 136, 129, 136, 137, 156, 138, 136, 144,
	136, 146, 136, 149, 136, 151, 136, 154, 136, 167, 136, 172, 136, 177, 136,
	179, 136, 195, 136, 212, 136, 216, 136, 219, 136, 221, 136, 226, 136, 233,
	136, 235, 136, 237, 136, 243, 136, 245, 136, 247, 136, 249, 136, 253, 136,
	255, 136, 257, 136, 263, 136, 265, 136, 267, 136, 278, 136, 280, 136, 282,
	136, 284, 136, 290, 136, 292, 136, 294, 136, 305, 136, 320, 136, 322, 136,
	324, 136, 335, 136, 361, 136, 140, 161, 141, 161, 142, 161, 116, 137, 138,
	137, 144, 137, 167, 137, 159, 180, 203, 230, 86, 116, 95, 124, 117, 144, 125,
	149, 158, 179, 175, 195, 193, 212, 197, 219, 198, 221, 200, 226, 214, 235,
	215, 237, 223, 247, 224, 249, 228, 255, 229, 257, 239, 267, 251, 282, 252,
	284, 259, 294, 286, 324, 43, 59, 60, 59, 63, 59, 64, 59, 102, 59, 106, 59,
	107, 59, 132, 59, 101, 129, 130, 154, 153, 175, 174, 193, 176, 198, 178, 200,
	194, 215, 199, 224, 201, 229, 225, 252, 37, 46, 47, 46, 51, 46, 52, 46, 74,
	46, 80, 46, 81, 46, 111, 46, 16, 34, 48, 75, 73, 108, 76, 110, 83, 114, 92,
	122, 143, 165, 148, 170, 160, 181, 166, 183, 168, 185, 169, 187, 171, 189,
	173, 191, 175, 196, 182, 204, 184, 205, 186, 207, 188, 208, 190, 209, 192,
	211, 193, 213, 197, 220, 198, 222, 200, 227, 206, 231, 210, 232, 214, 236,
	215, 238, 218, 241, 223, 248, 224, 250, 228, 256, 229, 258, 234, 261, 239,
	268, 240, 269, 242, 271, 244, 273, 246, 276, 251, 283, 252, 285, 254, 288,
	259, 295, 260, 296, 262, 298, 264, 300, 266, 303, 270, 307, 272, 308, 274,
	310, 275, 311, 277, 313, 279, 315, 281, 318, 286, 325, 287, 326, 289, 328,
	291, 330, 293, 333, 297, 337, 299, 338, 301, 340, 302, 341, 304, 343, 306,
	345, 309, 347, 312, 348, 314, 349, 316, 351, 317, 352, 319, 354, 321, 356,
	323, 359, 327, 363, 329, 364, 331, 366, 332, 367, 334, 369, 336, 371, 339,
	373, 342, 374, 344, 375, 346, 377, 350, 378, 353, 379, 355, 380, 357, 382,
	358, 383, 360, 385, 362, 387, 365, 389, 368, 390, 370, 391, 372, 393, 376,
	394, 381, 395, 384, 396, 386, 397, 388, 399, 392, 400, 398, 401, 25, 37, 27,
	39, 29, 41, 31, 43, 38, 52, 40, 55, 42, 58, 44, 64, 16, 35, 51, 78, 54, 85,
	57, 94, 63, 104, 74, 109, 81, 112, 82, 113, 83, 115, 90, 120, 91, 121, 92,
	123, 99, 128, 102, 131, 107, 133, 111, 134, 119, 145, 127, 150, 132, 155, 33,
	45, 45, 65, 45, 66, 45, 67, 45, 68, 0, 4, 6, 10, 22, 4, 25, 4, 27, 4, 29, 4,
	31, 4, 37, 4, 39, 4, 41, 4, 43, 4, 48, 4, 49, 4, 52, 4, 55, 4, 58, 4, 61, 4,
	64, 4, 86, 4, 87, 4, 95, 4, 96, 4, 101, 4, 116, 4, 124, 4, 129, 4, 143, 4,
	144, 4, 148, 4, 149, 4, 153, 4, 154, 4, 160, 4, 168, 4, 169, 4, 173, 4, 174,
	4, 175, 4, 178, 4, 184, 4, 190, 4, 193, 4, 195, 4, 198, 4, 199, 4, 200, 4,
	212, 4, 215, 4, 218, 4, 219, 4, 221, 4, 224, 4, 226, 4, 229, 4, 234, 4, 235,
	4, 237, 4, 240, 4, 244, 4, 246, 4, 247, 4, 249, 4, 252, 4, 254, 4, 255, 4,
	257, 4, 260, 4, 264, 4, 266, 4, 267, 4, 272, 4, 275, 4, 279, 4, 281, 4, 282,
	4, 284, 4, 287, 4, 291, 4, 293, 4, 294, 4, 299, 4, 302, 4, 306, 4, 314, 4,
	317, 4, 321, 4, 323, 4, 324, 4, 329, 4, 332, 4, 336, 4, 344, 4, 355, 4, 358,
	4, 362, 4, 370, 4, 386, 4, 0, 5, 22, 36, 25, 38, 27, 40, 29, 42, 31, 44, 37,
	47, 39, 53, 41, 56, 43, 60, 48, 76, 49, 77, 52, 80, 55, 89, 58, 98, 61, 103,
	64, 106, 86, 117, 87, 118, 95, 125, 96, 126, 101, 130, 116, 138, 124, 146,
	129, 151, 143, 166, 144, 167, 148, 171, 149, 172, 153, 176, 154, 177, 160,
	182, 168, 186, 169, 188, 173, 192, 174, 194, 175, 197, 178, 201, 184, 206,
	190, 210, 193, 214, 195, 216, 198, 223, 199, 225, 200, 228, 212, 233, 215,
	239, 218, 242, 219, 243, 221, 245, 224, 251, 226, 253, 229, 259, 234, 262,
	235, 263, 237, 265, 240, 270, 244, 274, 246, 277, 247, 278, 249, 280, 252,
	286, 254, 289, 255, 290, 257, 292, 260, 297, 264, 301, 266, 304, 267, 305,
	272, 309, 275, 312, 279, 316, 281, 319, 282, 320, 284, 322, 287, 327, 291,
	331, 293, 334, 294, 335, 299, 339, 302, 342, 306, 346, 314, 350, 317, 353,
	321, 357, 323, 360, 324, 361, 329, 365, 332, 368, 336, 372, 344, 376, 355,
	381, 358, 384, 362, 388, 370, 392, 386, 398, 0, 6, 22, 6, 25, 6, 27, 6, 29,
	6, 31, 6, 37, 6, 39, 6, 41, 6, 43, 6, 48, 6, 49, 6, 52, 6, 55, 6, 58, 6, 61,
	6, 64, 6, 86, 6, 87, 6, 95, 6, 96, 6, 101, 6, 116, 6, 124, 6, 129, 6, 143, 6,
	144, 6, 148, 6, 149, 6, 153, 6, 154, 6, 160, 6, 168, 6, 169, 6, 173, 6, 174,
	6, 175, 6, 178, 6, 184, 6, 190, 6, 193, 6, 195, 6, 198, 6, 199, 6, 200, 6,
	212, 6, 215, 6, 218, 6, 219, 6, 221, 6, 224, 6, 226, 6, 229, 6, 234, 6, 235,
	6, 237, 6, 240, 6, 244, 6, 246, 6, 247, 6, 249, 6, 252, 6, 254, 6, 255, 6,
	257, 6, 260, 6, 264, 6, 266, 6, 267, 6, 272, 6, 275, 6, 279, 6, 281, 6, 282,
	6, 284, 6, 287, 6, 291, 6, 293, 6, 294, 6, 299, 6, 302, 6, 306, 6, 314, 6,
	317, 6, 321, 6, 323, 6, 324, 6, 329, 6, 332, 6, 336, 6, 344, 6, 355, 6, 358,
	6, 362, 6, 370, 6, 386, 6, 15, 33, 45, 69, 45, 70, 45, 71, 45, 72, 45, 73, 7,
	17, 8, 17, 116, 139, 124, 147, 129, 152, 137, 157, 138, 139, 144, 139, 146,
	147, 149, 147, 151, 152, 154, 152, 167, 139, 172, 147, 177, 152, 179, 202,
	195, 217, 212, 217, 216, 217, 219, 217, 221, 217, 226, 217, 233, 217, 235,
	217, 237, 217, 243, 217, 245, 217, 247, 217, 249, 217, 253, 217, 255, 217,
	257, 217, 263, 217, 265, 217, 267, 217, 278, 217, 280, 217, 282, 217, 284,
	217, 290, 217, 292, 217, 294, 217, 305, 217, 320, 217, 322, 217, 324, 217,
	335, 217, 361, 217, 54, 86, 82, 86, 90, 86, 119, 86, 116, 140, 138, 140, 144,
	140, 167, 140, 137, 158, 179, 203, 116, 141, 138, 141, 144, 141, 167, 141,
	137, 159, 116, 142, 138, 142, 144, 142, 167, 142, 140, 162, 141, 163, 142,
	164, 116, 143, 138, 160, 144, 168, 167, 184, 54, 87, 82, 87, 90, 87, 119, 87,
	54, 88, 82, 88, 90, 88, 119, 88, 12, 27, 39, 54, 53, 82, 55, 90, 89, 119, 7,
	18, 8, 18, 57, 95, 91, 95, 99, 95, 127, 95, 124, 148, 146, 169, 149, 173,
	172, 190, 57, 96, 91, 96, 99, 96, 127, 96, 57, 97, 91, 97, 99, 97, 127, 97,
	13, 29, 7, 19, 8, 19, 41, 57, 56, 91, 58, 99, 98, 127, 59, 101, 129, 153,
	151, 174, 154, 178, 177, 199, 195, 218, 212, 234, 216, 240, 219, 244, 221,
	246, 226, 254, 233, 260, 235, 264, 237, 266, 243, 272, 245, 275, 247, 279,
	249, 281, 253, 287, 255, 291, 257, 293, 263, 299, 265, 302, 267, 306, 278,
	314, 280, 317, 282, 321, 284, 323, 290, 329, 292, 332, 294, 336, 305, 344,
	320, 355, 322, 358, 324, 362, 335, 370, 361, 386, 43, 61, 60, 61, 63, 61, 64,
	61, 102, 61, 106, 61, 107, 61, 132, 61, 43, 62, 60, 62, 63, 105, 64, 62, 102,
	105, 106, 62, 107, 105, 132, 105, 14, 31, 43, 63, 60, 102, 64, 107, 106, 132,
	7, 20, 8, 20, 11, 25, 37, 48, 47, 48, 51, 48, 52, 48, 74, 48, 80, 48, 81, 48,
	111, 48, 37, 49, 47, 49, 51, 49, 52, 49, 74, 49, 80, 49, 81, 49, 111, 49, 37,
	50, 47, 50, 51, 79, 52, 50, 74, 79, 80, 50, 81, 79, 111, 79, 7, 21, 8, 21,
	37, 51, 47, 74, 52, 81, 80, 111, 7, 22, 8, 22, 7, 23, 8, 23, 0, 7, 5, 8, 0,
	402,
}

var tmRuleLen = []int8{
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 1, 1, 1, 1, 1, 1, 5, 1, 3,
	1, 2, 1, 2, 1, 2, 1, 7, 6, 6, 5, 6, 5, 5, 4, 2, 2, 1, 2, 1, 2, 0, 7, 6, 6, 5,
	1, 1, 7, 6, 6, 5, 6, 5, 5, 4, 2, 2, 1, 2, 1, 7, 6, 6, 5, 2, 0, 1, 1, 1, 14,
	13, 13, 12, 13, 12, 12, 11, 10, 9, 13, 12, 12, 11, 12, 11, 11, 10, 9, 8, 13,
	12, 12, 11, 12, 11, 11, 10, 9, 8, 12, 11, 11, 10, 11, 10, 10, 9, 8, 7, 13,
	12, 12, 11, 12, 11, 11, 10, 9, 8, 12, 11, 11, 10, 11, 10, 10, 9, 8, 7, 12,
	11, 11, 10, 11, 10, 10, 9, 8, 7, 11, 10, 10, 9, 10, 9, 9, 8, 7, 6, 1, 2, 1,
	2, 1, 7, 6, 6, 5, 1, 1, 3, 2, 1, 2, 7, 6, 6, 5, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1,
	2, 2, 0, 2, 1,
}

var tmRuleSymbol = []int32{
	29, 29, 30, 31, 31, 31, 31, 32, 33, 34, 35, 36, 37, 37, 37, 37, 38, 39, 39,
	40, 41, 42, 43, 44, 45, 46, 47, 48, 48, 48, 48, 48, 48, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 50, 50, 51, 52, 52, 53, 53, 53, 53, 54, 55, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 57, 57, 58, 59, 59, 59, 59, 60, 60, 61, 62, 63,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64,
	64, 64, 64, 64, 65, 65, 66, 67, 67, 68, 68, 68, 68, 69, 70, 71, 71, 72, 72,
	73, 73, 73, 73, 74, 74, 75, 75, 75, 75, 75, 75, 75, 76, 76, 77, 77, 78, 78,
}

var tmRuleType = [...]NodeType{
	0,            // Comment : BlockComment
	0,            // Comment : EolComment
	0,            // WhiteSpace : WhiteSpace$1
	0,            // WhiteSpace$1 : WhiteSpace$1 Comment
	0,            // WhiteSpace$1 : WhiteSpace$1 WS
	0,            // WhiteSpace$1 : Comment
	0,            // WhiteSpace$1 : WS
	OptionName,   // OptionName : Name
	OptionString, // OptionString : StringLiteral
	OptionBool,   // OptionBool : BoolLiteral
	OptionInt,    // OptionInt : IntLiteral
	OptionFloat,  // OptionFloat : FloatLiteral
	0,            // OptionValue : OptionString
	0,            // OptionValue : OptionBool
	0,            // OptionValue : OptionInt
	0,            // OptionValue : OptionFloat
	0,            // Option : 'option' OptionName '=' OptionValue ';'
	0,            // TypeRef : Name
	0,            // TypeRef : Primitive
	FieldName,    // FieldName : Name
	ScalarType,   // ScalarType : TypeRef
	MapKeyType,   // MapKeyType : Primitive
	MapValueType, // MapValueType : TypeRef
	0,            // MapType : '[' MapKeyType ':' MapValueType ']'
	ListElement,  // ListElementType : TypeRef
	0,            // ListType : '[' ListElementType ']'
	FieldMod,     // FieldMod : Modifier
	0,            // FieldType : ScalarType FieldMod
	0,            // FieldType : ScalarType
	0,            // FieldType : MapType FieldMod
	0,            // FieldType : MapType
	0,            // FieldType : ListType FieldMod
	0,            // FieldType : ListType
	0,            // FieldDef : FieldName WhiteSpace ':' WhiteSpace FieldType WhiteSpace ';'
	0,            // FieldDef : FieldName WhiteSpace ':' WhiteSpace FieldType ';'
	0,            // FieldDef : FieldName WhiteSpace ':' FieldType WhiteSpace ';'
	0,            // FieldDef : FieldName WhiteSpace ':' FieldType ';'
	0,            // FieldDef : FieldName ':' WhiteSpace FieldType WhiteSpace ';'
	0,            // FieldDef : FieldName ':' WhiteSpace FieldType ';'
	0,            // FieldDef : FieldName ':' FieldType WhiteSpace ';'
	0,            // FieldDef : FieldName ':' FieldType ';'
	0,            // FieldDef : error ';'
	0,            // FieldDef : error '}'
	0,            // FieldDefList : FieldDef
	0,            // FieldDefList : FieldDef WhiteSpace
	MessageName,  // MessageName : Name
	0,            // FieldDefList_optlist : FieldDefList_optlist FieldDefList
	0,            // FieldDefList_optlist :
	0,            // MessageDef : 'message' MessageName WhiteSpace '{' WhiteSpace FieldDefList_optlist '}'
	0,            // MessageDef : 'message' MessageName WhiteSpace '{' FieldDefList_optlist '}'
	0,            // MessageDef : 'message' MessageName '{' WhiteSpace FieldDefList_optlist '}'
	0,            // MessageDef : 'message' MessageName '{' FieldDefList_optlist '}'
	FieldName,    // UnionMemberName : Name
	ScalarType,   // UnionMemberType : TypeRef
	0,            // UnionMember : UnionMemberName WhiteSpace ':' WhiteSpace UnionMemberType WhiteSpace ';'
	0,            // UnionMember : UnionMemberName WhiteSpace ':' WhiteSpace UnionMemberType ';'
	0,            // UnionMember : UnionMemberName WhiteSpace ':' UnionMemberType WhiteSpace ';'
	0,            // UnionMember : UnionMemberName WhiteSpace ':' UnionMemberType ';'
	0,            // UnionMember : UnionMemberName ':' WhiteSpace UnionMemberType WhiteSpace ';'
	0,            // UnionMember : UnionMemberName ':' WhiteSpace UnionMemberType ';'
	0,            // UnionMember : UnionMemberName ':' UnionMemberType WhiteSpace ';'
	0,            // UnionMember : UnionMemberName ':' UnionMemberType ';'
	0,            // UnionMember : error ';'
	0,            // UnionMember : error '}'
	0,            // UnionMemberList : UnionMember
	0,            // UnionMemberList : UnionMember WhiteSpace
	UnionName,    // UnionName : Name
	0,            // UnionDef : 'union' UnionName WhiteSpace '{' WhiteSpace UnionMemberList_optlist '}'
	0,            // UnionDef : 'union' UnionName WhiteSpace '{' UnionMemberList_optlist '}'
	0,            // UnionDef : 'union' UnionName '{' WhiteSpace UnionMemberList_optlist '}'
	0,            // UnionDef : 'union' UnionName '{' UnionMemberList_optlist '}'
	0,            // UnionMemberList_optlist : UnionMemberList_optlist UnionMemberList
	0,            // UnionMemberList_optlist :
	RpcName,      // RpcName : Name
	RpcRequest,   // RpcRequest : TypeRef
	RpcResponse,  // RpcResponse : TypeRef
	0,            // Method : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest WhiteSpace ')' WhiteSpace ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest WhiteSpace ')' WhiteSpace ':' WhiteSpace RpcResponse ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest WhiteSpace ')' WhiteSpace ':' RpcResponse WhiteSpace ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest WhiteSpace ')' WhiteSpace ':' RpcResponse ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest WhiteSpace ')' ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest WhiteSpace ')' ':' WhiteSpace RpcResponse ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest WhiteSpace ')' ':' RpcResponse WhiteSpace ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest WhiteSpace ')' ':' RpcResponse ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest WhiteSpace ')' WhiteSpace ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest WhiteSpace ')' ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest ')' WhiteSpace ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest ')' WhiteSpace ':' WhiteSpace RpcResponse ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest ')' WhiteSpace ':' RpcResponse WhiteSpace ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest ')' WhiteSpace ':' RpcResponse ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest ')' ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest ')' ':' WhiteSpace RpcResponse ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest ')' ':' RpcResponse WhiteSpace ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest ')' ':' RpcResponse ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest ')' WhiteSpace ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' WhiteSpace RpcRequest ')' ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' RpcRequest WhiteSpace ')' WhiteSpace ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' RpcRequest WhiteSpace ')' WhiteSpace ':' WhiteSpace RpcResponse ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' RpcRequest WhiteSpace ')' WhiteSpace ':' RpcResponse WhiteSpace ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' RpcRequest WhiteSpace ')' WhiteSpace ':' RpcResponse ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' RpcRequest WhiteSpace ')' ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' RpcRequest WhiteSpace ')' ':' WhiteSpace RpcResponse ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' RpcRequest WhiteSpace ')' ':' RpcResponse WhiteSpace ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' RpcRequest WhiteSpace ')' ':' RpcResponse ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' RpcRequest WhiteSpace ')' WhiteSpace ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' RpcRequest WhiteSpace ')' ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' RpcRequest ')' WhiteSpace ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' RpcRequest ')' WhiteSpace ':' WhiteSpace RpcResponse ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' RpcRequest ')' WhiteSpace ':' RpcResponse WhiteSpace ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' RpcRequest ')' WhiteSpace ':' RpcResponse ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' RpcRequest ')' ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' RpcRequest ')' ':' WhiteSpace RpcResponse ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' RpcRequest ')' ':' RpcResponse WhiteSpace ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' RpcRequest ')' ':' RpcResponse ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' RpcRequest ')' WhiteSpace ';'
	0,            // Method : 'rpc' RpcName WhiteSpace '(' RpcRequest ')' ';'
	0,            // Method : 'rpc' RpcName '(' WhiteSpace RpcRequest WhiteSpace ')' WhiteSpace ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // Method : 'rpc' RpcName '(' WhiteSpace RpcRequest WhiteSpace ')' WhiteSpace ':' WhiteSpace RpcResponse ';'
	0,            // Method : 'rpc' RpcName '(' WhiteSpace RpcRequest WhiteSpace ')' WhiteSpace ':' RpcResponse WhiteSpace ';'
	0,            // Method : 'rpc' RpcName '(' WhiteSpace RpcRequest WhiteSpace ')' WhiteSpace ':' RpcResponse ';'
	0,            // Method : 'rpc' RpcName '(' WhiteSpace RpcRequest WhiteSpace ')' ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // Method : 'rpc' RpcName '(' WhiteSpace RpcRequest WhiteSpace ')' ':' WhiteSpace RpcResponse ';'
	0,            // Method : 'rpc' RpcName '(' WhiteSpace RpcRequest WhiteSpace ')' ':' RpcResponse WhiteSpace ';'
	0,            // Method : 'rpc' RpcName '(' WhiteSpace RpcRequest WhiteSpace ')' ':' RpcResponse ';'
	0,            // Method : 'rpc' RpcName '(' WhiteSpace RpcRequest WhiteSpace ')' WhiteSpace ';'
	0,            // Method : 'rpc' RpcName '(' WhiteSpace RpcRequest WhiteSpace ')' ';'
	0,            // Method : 'rpc' RpcName '(' WhiteSpace RpcRequest ')' WhiteSpace ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // Method : 'rpc' RpcName '(' WhiteSpace RpcRequest ')' WhiteSpace ':' WhiteSpace RpcResponse ';'
	0,            // Method : 'rpc' RpcName '(' WhiteSpace RpcRequest ')' WhiteSpace ':' RpcResponse WhiteSpace ';'
	0,            // Method : 'rpc' RpcName '(' WhiteSpace RpcRequest ')' WhiteSpace ':' RpcResponse ';'
	0,            // Method : 'rpc' RpcName '(' WhiteSpace RpcRequest ')' ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // Method : 'rpc' RpcName '(' WhiteSpace RpcRequest ')' ':' WhiteSpace RpcResponse ';'
	0,            // Method : 'rpc' RpcName '(' WhiteSpace RpcRequest ')' ':' RpcResponse WhiteSpace ';'
	0,            // Method : 'rpc' RpcName '(' WhiteSpace RpcRequest ')' ':' RpcResponse ';'
	0,            // Method : 'rpc' RpcName '(' WhiteSpace RpcRequest ')' WhiteSpace ';'
	0,            // Method : 'rpc' RpcName '(' WhiteSpace RpcRequest ')' ';'
	0,            // Method : 'rpc' RpcName '(' RpcRequest WhiteSpace ')' WhiteSpace ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // Method : 'rpc' RpcName '(' RpcRequest WhiteSpace ')' WhiteSpace ':' WhiteSpace RpcResponse ';'
	0,            // Method : 'rpc' RpcName '(' RpcRequest WhiteSpace ')' WhiteSpace ':' RpcResponse WhiteSpace ';'
	0,            // Method : 'rpc' RpcName '(' RpcRequest WhiteSpace ')' WhiteSpace ':' RpcResponse ';'
	0,            // Method : 'rpc' RpcName '(' RpcRequest WhiteSpace ')' ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // Method : 'rpc' RpcName '(' RpcRequest WhiteSpace ')' ':' WhiteSpace RpcResponse ';'
	0,            // Method : 'rpc' RpcName '(' RpcRequest WhiteSpace ')' ':' RpcResponse WhiteSpace ';'
	0,            // Method : 'rpc' RpcName '(' RpcRequest WhiteSpace ')' ':' RpcResponse ';'
	0,            // Method : 'rpc' RpcName '(' RpcRequest WhiteSpace ')' WhiteSpace ';'
	0,            // Method : 'rpc' RpcName '(' RpcRequest WhiteSpace ')' ';'
	0,            // Method : 'rpc' RpcName '(' RpcRequest ')' WhiteSpace ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // Method : 'rpc' RpcName '(' RpcRequest ')' WhiteSpace ':' WhiteSpace RpcResponse ';'
	0,            // Method : 'rpc' RpcName '(' RpcRequest ')' WhiteSpace ':' RpcResponse WhiteSpace ';'
	0,            // Method : 'rpc' RpcName '(' RpcRequest ')' WhiteSpace ':' RpcResponse ';'
	0,            // Method : 'rpc' RpcName '(' RpcRequest ')' ':' WhiteSpace RpcResponse WhiteSpace ';'
	0,            // Method : 'rpc' RpcName '(' RpcRequest ')' ':' WhiteSpace RpcResponse ';'
	0,            // Method : 'rpc' RpcName '(' RpcRequest ')' ':' RpcResponse WhiteSpace ';'
	0,            // Method : 'rpc' RpcName '(' RpcRequest ')' ':' RpcResponse ';'
	0,            // Method : 'rpc' RpcName '(' RpcRequest ')' WhiteSpace ';'
	0,            // Method : 'rpc' RpcName '(' RpcRequest ')' ';'
	0,            // MethodList : Method
	0,            // MethodList : Method WhiteSpace
	ServiceName,  // ServiceName : Name
	0,            // MethodList_list : MethodList_list MethodList
	0,            // MethodList_list : MethodList
	0,            // ServiceDef : 'service' ServiceName WhiteSpace '{' WhiteSpace MethodList_list '}'
	0,            // ServiceDef : 'service' ServiceName WhiteSpace '{' MethodList_list '}'
	0,            // ServiceDef : 'service' ServiceName '{' WhiteSpace MethodList_list '}'
	0,            // ServiceDef : 'service' ServiceName '{' MethodList_list '}'
	EnumName,     // EnumName : Name
	EnumValue,    // EnumValue : Value
	0,            // EnumField : EnumValue WhiteSpace ';'
	0,            // EnumField : EnumValue ';'
	0,            // EnumValueList : EnumField
	0,            // EnumValueList : EnumField WhiteSpace
	0,            // EnumDef : 'enum' EnumName WhiteSpace '{' WhiteSpace EnumValueList_list '}'
	0,            // EnumDef : 'enum' EnumName WhiteSpace '{' EnumValueList_list '}'
	0,            // EnumDef : 'enum' EnumName '{' WhiteSpace EnumValueList_list '}'
	0,            // EnumDef : 'enum' EnumName '{' EnumValueList_list '}'
	0,            // EnumValueList_list : EnumValueList_list EnumValueList
	0,            // EnumValueList_list : EnumValueList
	0,            // Definition : MessageDef
	0,            // Definition : UnionDef
	0,            // Definition : ServiceDef
	0,            // Definition : EnumDef
	0,            // Definition : Option
	0,            // Definition : error ';'
	0,            // Definition : error '}'
	0,            // DefinitionList : Definition
	0,            // DefinitionList : Definition WhiteSpace
	0,            // DefinitionList_optlist : DefinitionList_optlist DefinitionList
	0,            // DefinitionList_optlist :
	0,            // ServoFile : WhiteSpace DefinitionList_optlist
	0,            // ServoFile : DefinitionList_optlist
}

// set(follow ERROR) = SEMICOLON, RBRACE
var afterErr = []token.Type{
	21, 23,
}
