// generated by Textmapper; DO NOT EDIT

package token

import (
	"fmt"
)

// Type is an enum of all terminal symbols of the servo language.
type Type int32

// Token values.
const (
	UNAVAILABLE Type = iota - 1
	EOI
	INVALID_TOKEN
	ENUM    // enum
	MESSAGE // message
	UNION   // union
	SERVICE // service
	OPTION  // option
	WS
	EOLCOMMENT
	BLOCKCOMMENT
	ERROR
	NAME
	PRIMITIVE
	MODIFIER
	LBRACK // [
	RBRACK // ]
	COLON  // :
	RPC    // rpc
	LPAREN // (
	RPAREN // )
	VALUE
	SEMICOLON // ;
	LBRACE    // {
	RBRACE    // }
	ASSIGN    // =
	STRINGLITERAL
	BOOLLITERAL
	INTLITERAL
	FLOATLITERAL

	NumTokens
)

var tokenStr = [...]string{
	"EOI",
	"INVALID_TOKEN",
	"enum",
	"message",
	"union",
	"service",
	"option",
	"WS",
	"EOLCOMMENT",
	"BLOCKCOMMENT",
	"ERROR",
	"NAME",
	"PRIMITIVE",
	"MODIFIER",
	"[",
	"]",
	":",
	"rpc",
	"(",
	")",
	"VALUE",
	";",
	"{",
	"}",
	"=",
	"STRINGLITERAL",
	"BOOLLITERAL",
	"INTLITERAL",
	"FLOATLITERAL",
}

func (tok Type) String() string {
	if tok >= 0 && int(tok) < len(tokenStr) {
		return tokenStr[tok]
	}
	return fmt.Sprintf("token(%d)", tok)
}
